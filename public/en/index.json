[{"content":"Hello English!\n","permalink":"http://localhost:1313/en/posts/hello-world/","summary":"\u003cp\u003eHello English!\u003c/p\u003e","title":"Hello World"},{"content":"I just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\nNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\nUpdating the system Keeping the system updated is very important to get the latest security patches and an optimized system.\n1. First, update the local package index by running the following command in the terminal:\nsudo apt update\nThen, upgrade the packages to their latest versions with this command:\nsudo apt upgrade\nFinally, open the App Center to check if any applications have pending updates.\n2. Get familiar with the GNOME environment Although I have used Linux and specifically Ubuntu before, I use Windows daily. GNOME is very intuitive, but it\u0026rsquo;s a good idea to spend some time exploring its options, menus, applications, and generally getting familiar with the system.\n3. Customize the desktop In the Settings menu, you\u0026rsquo;ll find tools to personalize the system. The Appearance section is especially useful, where you can enable dark mode, change the wallpaper, and adjust the position of the taskbar.\n4. Install your preferred software The easiest way to install software is by using the App Center, where you\u0026rsquo;ll find many popular applications.\nIn my case, I have already installed some basic applications that I use frequently and will add more as needed:\nBrave, this browser looks great, and I want to try it. Ubuntu comes with Firefox by default. Visual Studio Code, a very versatile software development environment. Element, a Matrix client. 5. Security first: Enable and configure the firewall Ubuntu includes the UFW (Uncomplicated Firewall), which is very simple to configure and effective. To configure it, use these terminal commands.\nTo check the current firewall status:\nsudo ufw status\nBy default, it will be inactive, so activate it with this command:\nsudo ufw enable\nThen, set a minimal policy by denying incoming connections by default and allowing outgoing ones:\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nNext, allow exceptions for browsing the Internet (enabling HTTP and HTTPS ports) and for accessing the computer via SSH:\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw allow ssh\n6. More advanced steps Many guides mention the possibility of enabling Flatpak, an alternative to Snap, Ubuntu\u0026rsquo;s default package manager. Each has its advantages and disadvantages, so it\u0026rsquo;s advisable to do some research before making a decision. You can find more details about both package systems at this link.\nConclusion My last experience with Ubuntu was a few years ago, and now that I’ve returned to it, I can say the evolution has been impressive. It has improved in compatibility with older hardware and now offers a much more polished and efficient experience. In my case, installing Ubuntu on my MacBook Air was a great decision: the device went from being barely usable to having excellent speed, ease of use, and full compatibility.\nWith these steps, you now have a solid foundation to start exploring Ubuntu!\n","permalink":"http://localhost:1313/en/posts/ubuntu24firststeps/","summary":"\u003cp\u003eI just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\u003c/p\u003e\n\u003cp\u003eNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\u003c/p\u003e","title":"First steps with an fresh Ubuntu 24.04"},{"content":"I\u0026rsquo;ve got a 2015 MacBook Air with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\nThe installation and usage experience with Ubuntu has improved a lot since the last time I tried it about six or seven years ago. The process is super simple and effective. Thanks to Ubuntu, my laptop has regained its speed! Now I’ll walk you through the installation process step by step:\nPrerequisites The old laptop/desktop and a bit of motivation.\nAn USB drive of at least 8 GB (in my case, I used a 128 GB one, which is more than enough).\nStep-by-Step Installation of Ubuntu 1. Download Ubuntu: First, download the Ubuntu image from its official website. You can do this from the same laptop (if it’s still usable) or from another computer, as I did. Which version should you choose? I recommend the latest LTS (Long-Term Support) version, which guarantees 5 years of maintenance and security updates. I installed Ubuntu 24.04 LTS.\n2. Create a Bootable USB: The downloaded image is in .iso format, which is a disk image. To create the bootable USB on Windows, I used the program Balena Etcher, which is simple and effective. This software basically follows three steps:\nSelect the image: Click on “Flash from file” and choose the .iso file you downloaded. Select the destination drive: Make sure to choose the USB drive and not your computer’s hard drive. Start the process: Verify that everything is correct and click on “Flash”. The writing and verification may take a few minutes. Installing Ubuntu on the MacBook 1. Boot from the USB Drive: Connect the USB drive to the MacBook (which should be turned off), and turn it on while holding down the Option/Alt (⌥) key. The recognized boot disks will appear, and you must select the USB drive icon.\n2. Try Before Installing: Once Ubuntu starts, it offers you two options: “Try” or “Install Ubuntu”. I recommend choosing “Try” to check if it recognizes all the important drivers. In my case, it recognized everything! From the backlit keyboard to the trackpad, WiFi, and the special keys.\n3. Install Ubuntu: When you’re ready, click on the installation icon that appears on the Ubuntu desktop. The process is completely guided and very intuitive. You only need to choose the language, keyboard layout, and time zone. After a few minutes, Ubuntu was installed and ready to use.\nResults and Conclusions And voilà! My MacBook Air is alive again. With Ubuntu, its performance is much smoother, boot times are fast, and the user experience is excellent. Although I couldn’t compare the performance directly because I didn’t run tests before formatting macOS, I assure you that the change is incredible: the laptop flies!\nSo, if you have an old computer and think that your only option is to recycle or throw it away, consider installing Linux. You can give it a second life with Ubuntu, Mint, or any other distribution. My recommendation is Ubuntu, because as I’ve mentioned, the process was simple and the result, fantastic.\nSee you next time!\n","permalink":"http://localhost:1313/en/posts/ubuntu-macbook/","summary":"\u003cp\u003e\u003cstrong\u003eI\u0026rsquo;ve got a 2015 MacBook Air\u003c/strong\u003e with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\u003c/p\u003e","title":"Installing Ubuntu on a Macbook Air from 2015"},{"content":"\nDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across DietPi, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\nOn the DietPi website, they showcase how optimized this Linux distribution is. You can check out a comparison with other SBCs and distributions here. Note! This comparison doesn’t claim that DietPi is better than other distributions, only that it is significantly lighter.\nAnother major advantage of this distribution is its extensive software selection, making installation extremely simple for users. You can check out the complete list of available software here.\nAfter reading about all the benefits of DietPi, I had to try it on my Raspberry Pi 1 to see how well it performs.\nInstalling DietPi on a Raspberry Pi 1 The DietPi website provides a detailed installation guide, which you can check out here. However, here’s a quick summary of my experience and the steps I followed (it was really simple):\nChoose and download the image that corresponds to your miniPC (in my case, the Raspberry Pi 1).\nThe downloaded file is not an .iso but a compressed archive. You need a program like 7zip to extract it easily.\nUsing Balena Etcher, flash the extracted image to the microSD card. After flashing the image, do not remove the microSD from your computer yet. Open the file explorer (if you’re using Windows) and look for the file dietpi.txt. This file allows you to preconfigure DietPi, so it automatically applies settings on first boot.\nI opened it with Notepad++ and made a few modifications:\nAUTO_SETUP_LOCALE=es_ES.UTF-8 → Sets the regional locale.\nAUTO_SETUP_KEYBOARD_LAYOUT=es → Configures the keyboard (useful for SSH connections).\nAUTO_SETUP_TIMEZONE=Europe/Madrid → Sets the correct timezone.\nAUTO_SETUP_NET_WIFI_COUNTRY_CODE=ES → (Optional) Defines the WiFi country code.\nAUTO_SETUP_NET_USESTATIC=1 → Enables a static IP address instead of DHCP.\nAUTO_SETUP_NET_STATIC_IP=192.168.0.100 → Sets a specific local IP for the Raspberry Pi.\nAUTO_SETUP_NET_STATIC_MASK=255.255.255.0 → Configures the network mask (usually left unchanged).\nAUTO_SETUP_NET_STATIC_GATEWAY=192.168.0.1 → Defines the router’s IP address.\nAUTO_SETUP_NET_STATIC_DNS=9.9.9.9 149.112.112.112 → Uses Quad9 as the DNS provider (you can change this).\nAUTO_SETUP_NET_HOSTNAME=DietPi → Sets the Raspberry Pi’s hostname on the network.\nAUTO_SETUP_HEADLESS=1 → Disables HDMI output to save resources (since I’ll always use SSH).\nAUTO_SETUP_AUTOMATED=1 → Enables an automated installation using the predefined dietpi.txt settings.\nAfter modifying dietpi.txt, I inserted the microSD into the Raspberry Pi, connected an Ethernet cable (it was easier than setting up a USB WiFi adapter), and powered it on. I was confident that my configurations would work, so I didn’t connect a monitor or keyboard. I simply waited for it to appear on my network at the configured IP. At first, I thought something had gone wrong… but voilà! After about 2–3 minutes (yes, I’m impatient), it showed up on the network, and I connected via SSH.\nOnce connected, I could see the setup process in action. The system performed an initial apt-get update and asked a few questions:\nWould I like to participate in anonymous statistics?\nWould I like to change the root and dietpi user passwords? (A must for security!)\nShould I keep the Raspberry Pi’s serial output enabled? (Useful for debugging, but if you don’t have a serial cable, it’s better to disable it to save resources.)\nThe most interesting part is the \u0026ldquo;Browse software\u0026rdquo; option, which provides a huge list of installable software.\nAt this point, I had DietPi up and running, but… what should I use it for? I started researching projects online, and recently, I’ve found Reddit to be an amazing resource—it’s full of useful ideas!\nHere are some projects I found for a Raspberry Pi 1 running DietPi:\nPi-hole → A network-wide ad blocker that filters ads and tracking requests at the DNS level.\nA child\u0026rsquo;s first computer → With a few tweaks and a friendly interface, it could be a great first PC for a kid.\nA centralized print server → To connect old non-networked printers.\nVPN server, Home Assistant, Retro gaming, or a Minecraft server → These options require more computing power (Raspberry Pi 3 or higher is recommended).\nFor now, I’ve decided to set up Pi-hole on my Raspberry Pi 1 to test how well it performs. Let’s see if it’s as good as people say!\nThat’s it for now! In my next post, I’ll walk you through the Pi-hole installation process, how I configured it, and how it works—so you can decide if it’s something worth trying. See you next time! 🚀\n","permalink":"http://localhost:1313/en/posts/dietpi-raspi1/","summary":"\u003cp\u003e\u003cimg alt=\"Raspberry pi 1 image\" loading=\"lazy\" src=\"https://images.prismic.io/rpf-products/3dc09a41-c237-4d2c-a9b8-c92eb3dc98e8_B%2B+ANGLE+1+REFRESH.jpg?auto=compress%2Cformat\u0026fit=max\"\u003e\u003c/p\u003e\n\u003cp\u003eDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across \u003ca href=\"https://dietpi.com/\"\u003eDietPi\u003c/a\u003e, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\u003c/p\u003e","title":"DietPi, the operating system to give new life to a Raspberry Pi 1"},{"content":"\nOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\nFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\nLetterboxd: This is a social network where you can rate the movies you’ve watched. I tried it—it’s well-designed, works smoothly, but… what about TV series? That’s why I decided it wasn’t the best option. For the same reason, I ruled out other apps like Moviebase, SeriesGuide, and Cinetrak.\nIMDb: This app allows you to track both movies and TV series and works well. Based on your ratings, it recommends content you might like. However, after testing it, I found it a bit difficult to generate a list of all the movies and series I watched throughout the year.\nJustWatch: The biggest advantage of this app is that, in addition to letting me rate movies and series, it also provides recommendations for content I might enjoy. A great feature is that it tells you which platform each movie or show is available on. Like any app, it’s not a perfect fit for my preferences since it’s not a social network, but it’s the closest to what I was looking for.\nFor now, JustWatch is the winner, but I’ll keep looking to see if I find another app that I like even more.\nDo you know of any other apps that meet my needs? I’d love to hear your suggestions in the comments!\n","permalink":"http://localhost:1313/en/posts/movies-series-app/","summary":"\u003cp\u003e\u003cimg alt=\"Image of a TV remote controller\" loading=\"lazy\" src=\"/images/tv-series.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\u003c/p\u003e\n\u003cp\u003eFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\u003c/p\u003e","title":"Where to store watched movies/series?"},{"content":"\nThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\nAnd here’s the list of books I’ve selected to read (at least for now):\nThink Like a Monk: Train Your Mind for Peace and Purpose Every Day. Jay Shetty. This is the book I’m currently reading and the first of the year. I’m already three-quarters of the way through, and it’s great! However, there are paragraphs I need to read twice to fully grasp all the lessons inside. It’s highly, highly recommended.\nThe Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win. Gene Kim, Kevin Behr, George Spafford. This was a Christmas gift and a book I’ve wanted to read for a long time. Apparently, it humorously illustrates the conflict between Dev and Ops and how DevOps emerges from it.\nDeep Work. Rules For Focused Success In A Distracted World. Cal Newport. I’m eager to read this book because, even though it seems obvious, staying focused while working is quite difficult nowadays.\nLa sombra del viento. Carlos Ruiz Zafón. Not everything has to be about learning, so I’ve chosen this super famous novel. Everyone who reads frequently recommends it to me. The thing is, I started it years ago but didn’t get hooked—so I’m giving it another chance!\nCatching fire. The Hunger Games 2. Suzanne Collings. I bought the trilogy and read the first two books, but then I watched all the movies, and reading the final book lost a bit of its charm since I already know how it ends. However, I don’t like leaving a series unfinished, so I’m going to read it.\nThat’s it! This is my reading commitment for the year. By the end of 2024, I’ll post an update, and it’ll also be on my GoodReads profile.\nAnd what about you? What are you planning to read this year?\n","permalink":"http://localhost:1313/en/posts/books2024/","summary":"\u003cp\u003e\u003cimg alt=\"Image of books I read in 2024\" loading=\"lazy\" src=\"/images/books2024.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\u003c/p\u003e\n\u003cp\u003eAnd here’s the list of books I’ve selected to read (at least for now):\u003c/p\u003e","title":"Books for 2024"},{"content":"Hi! I\u0026rsquo;m Javier Barbarán 👋 I\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\n🚀 Experience Software development with various technologies Creating technical and educational content Contributing to open-source projects 📩 Contact If you\u0026rsquo;d like to reach out, you can find me on LinkedIn or Twitter.\n","permalink":"http://localhost:1313/en/about/","summary":"\u003ch2 id=\"hi-im-javier-barbarán-\"\u003eHi! I\u0026rsquo;m Javier Barbarán 👋\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\u003c/p\u003e\n\u003ch3 id=\"-experience\"\u003e🚀 Experience\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSoftware development with various technologies\u003c/li\u003e\n\u003cli\u003eCreating technical and educational content\u003c/li\u003e\n\u003cli\u003eContributing to open-source projects\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"-contact\"\u003e📩 Contact\u003c/h3\u003e\n\u003cp\u003eIf you\u0026rsquo;d like to reach out, you can find me on \u003ca href=\"https://www.linkedin.com/in/javierbarbaran/\"\u003eLinkedIn\u003c/a\u003e or \u003ca href=\"https://x.com/javibarbaran\"\u003eTwitter\u003c/a\u003e.\u003c/p\u003e","title":"About Me"},{"content":"\nIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\nIn software development companies, it is common practice to impose deadlines for projects that are generally unachievable for development teams—whether due to client commitments, costs, or other reasons. As a result, teams are pressured to develop software as quickly as possible to minimize delivery delays (because, let’s face it, there will be delays). To meet these deadlines, developers often sacrifice essential development practices that ensure a minimum level of quality, such as Test-Driven Development (TDD), the use of continuous integration tools, or refactoring the code as it is written. These practices help eliminate code duplication, improve readability, and follow principles such as the Single Responsibility Principle (SRP), among many others that make up what is now known as Clean Code.\nThis is bad news—very bad news. The result is that a software product will be delivered functionally in a short time and with minimal staff, but at what cost? The developed software will be incredibly difficult to maintain, there will be no unit tests to verify system functionality (meaning that adding new features may break something else without anyone realizing), and code readability will likely be questionable at best.\nOn Javier Garzas\u0026rsquo;s blog (highly recommended), I remember reading a post stating—very accurately—that the role of software engineers is to passionately advocate to their companies that software quality is not just recommended but essential. Yes, ensuring quality means that development may initially be slower, but the long-term benefits are enormous. The post also included an analogy—a bit extreme, but it clearly illustrates the point:\nA patient about to undergo an appendectomy, already in the operating room, sees the surgeon washing their hands and instruments and says: - \u0026ldquo;Come on, doctor, don’t wash your hands, it doesn’t matter, just operate on me now! I’ll pay you, and I say there’s no time to waste.\u0026rdquo; -\nOf course, the surgeon, as part of their duty, refuses the request and insists on sterilizing everything before proceeding. Yes, this takes extra time, but skipping it would likely lead to severe post-operative complications.\nAnd that is precisely the development team\u0026rsquo;s mission when dealing with their company: to emphasize the importance of Clean Code or to accept the consequences of rushed, low-quality development.\nFor those who are still unsure—what exactly is Clean Code? A quick search on the internet will bring up Wikipedia, blogs, and plenty of articles on the topic. But I found a book titled simply Clean Code. It\u0026rsquo;s available on Amazon at this link. I checked the reviews (all excellent) and bought it without hesitation. As the title suggests, this book makes a strong statement of intent. And I have to say—it does not disappoint.\nIn my opinion, the book is incredibly thorough, covering all aspects of good programming with clear examples of what should and shouldn’t be done. Some may argue that these concepts are taught in computer science degrees, but nowadays, more and more programmers come from non-CS backgrounds. And even if you\u0026rsquo;ve learned these principles before, it’s always good to have them fresh in your mind. That’s why I firmly believe this book should be required reading for all software professionals—whether they have a formal CS background or not.\nBeyond Clean Code, the book also covers topics such as concurrency and design patterns. Some of its advice may seem trivial to experienced developers, but these reminders are incredibly important—especially in a corporate environment where new features and changes are constantly demanded yesterday. The goal? To write Clean Code and take pride in what we build.\nIs this the only book on the subject? Not at all. There are countless great books and blog posts on Clean Code, Test-Driven Development (TDD), and other methodologies. However, I personally found this book particularly clear, direct, and, above all, useful.\n","permalink":"http://localhost:1313/en/posts/cleancode/","summary":"\u003cp\u003e\u003cimg alt=\"Portada del libro Clean Code\" loading=\"lazy\" src=\"/images/cleancode.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\u003c/p\u003e","title":"Clean code"},{"content":"My Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that it took forever to turn on, animations and transitions were painfully slow, and even opening the browser with a simple webpage was a struggle… In short, all sorts of performance issues that I blamed on the new Android version, since the problems started right after the update.\nConsidering that, as of today, there doesn’t seem to be any 5.0.3 or higher update on the horizon, I thought… either I fix it, or I’m left with a fancy Nexus-branded paperweight.\nAfter searching online, I found that some Nexus 7 users (especially the 2012 version) were experiencing issues with this update. However, most of the problems were related to WiFi or Bluetooth, rather than performance. This link lists some possible fixes:\nhttp://www.gottabemobile.com/2014/12/29/android-5-0-2-problems-fixes/\nFor my specific issue, I found three possible solutions:\nAccess a hidden Google menu and follow a series of steps. Factory reset the tablet, which would erase all my data, apps, etc. Root the tablet and install Android KitKat, which had been working fine. In any case, it seemed like the solution involved deleting data and apps. Well, none of these three solutions worked for me.\nI had an app installed to extend battery life (I won’t mention the name to avoid any trouble), and I thought it might be conflicting with Android 5.0.2—since one of the new version’s selling points was improved battery life. I uninstalled it, and BOOM! The tablet was running as smoothly as it did with KitKat.\nSo, in conclusion, if you’re reading this post because you\u0026rsquo;re having issues with your Nexus 7, before trying anything complicated, check your apps! Be suspicious of the latest ones you installed, as they might not be updated to work with the new Android version. Uninstall them first. If that doesn’t fix it… well, then you can start thinking about rooting your device.\n","permalink":"http://localhost:1313/en/posts/googlenexus2012-android502/","summary":"\u003cp\u003eMy Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that \u003cstrong\u003eit took forever to turn on\u003c/strong\u003e, \u003cstrong\u003eanimations and transitions were painfully slow, and even opening the browser with a simple webpage\u003c/strong\u003e was a struggle… In short, all sorts of \u003cem\u003eperformance issues\u003c/em\u003e that I blamed on the new Android version, since the problems started right after the update.\u003c/p\u003e","title":"Google Nexus 2012 y Android 5.0.2"},{"content":"\nSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is Fog Computing? Is it just another marketing buzzword rather than a real concept?\nWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\nEssentially, the IoT consists of two main components: Cloud Computing and hardware devices deployed in the real world, connected to the cloud. Fog Computing focuses on processing data between the hardware and the cloud. For example, imagine a door with an electronic lock and an RFID reader that controls access to a room. With Fog Computing, the door itself could decide whether to grant access without needing to contact the cloud for credential verification—saving data, battery life, and reducing latency.\nNow, what would happen in a Cloud Computing setup? Would the system need to communicate with the cloud to verify access? And what if there’s no connection or the network is slow? In that case, you could end up waiting at the door for a long time or even being unable to enter, despite having the correct credentials.\nSo, is Fog Computing the same as Cloud Computing? The answer largely depends on how we define Cloud Computing. Nobody says that cloud computing can’t involve processing some data locally—after all, that’s the whole point of making devices increasingly “smart” and capable of computing certain information before sending it to the cloud.\nTherefore, in conclusion—and this is just my personal opinion—Fog Computing is a very interesting concept, and it can certainly help clarify how certain devices operate. However, if we take a broad definition of Cloud Computing, Fog Computing could be considered just a subset of it.\nResources:\nhttp://bitelia.com/2014/04/fog-computing\nhttp://www.cisco.com/web/about/ac50/ac207/crc_new/university/RFP/rfp13078.html\n","permalink":"http://localhost:1313/en/posts/fog-computing/","summary":"\u003cp\u003e\u003cimg alt=\"Paisaje con niebla\" loading=\"lazy\" src=\"/images/fog.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is \u003cem\u003eFog Computing\u003c/em\u003e? Is it just another marketing buzzword rather than a real concept?\u003c/p\u003e\n\u003cp\u003eWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\u003c/p\u003e","title":"Fog computing"},{"content":"Hace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es, sorpresa!!, OpenJDK.\nAsí que os dejo aquí los pasos que tuve que hacer para instalarlo:\n(Tened en cuenta que en el momento de escribir este post la versión de Java era la 6, asi que tenedlo en cuenta y poned el número de la versión que querais instalar)\nsudo apt-get install openjdk-6-jdk\napt-cache search jdk\nCon estas dos sencillas opciones se instala. Espero que os sirva.\n","permalink":"http://localhost:1313/en/posts/jdk-ubuntu1004/","summary":"\u003cp\u003eHace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es,  sorpresa!!, OpenJDK.\u003c/p\u003e","title":"Instalar Java JDK en Ubuntu 10.04 Lucyd Lynx"},{"content":"I\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to wikipedia.\nWhy talk about MOOCs? Because in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\nPros and cons of this type of learning:\nPros: Almost all are free. Since they’re online, each student can manage their own schedule and access the course whenever and wherever they want (as long as they have an internet connection).\nCons: You won’t receive an official certificate upon completion. At most, you may get a document stating that you completed the course, but its validity is questionable since it’s difficult to verify that the person taking the course is actually who they claim to be. (Perhaps the use of digital certificates would help, but even then, additional measures would be needed.)\nGoing back to the title of this article, the question is somewhat rhetorical, as it\u0026rsquo;s impossible to predict the evolution of these tools. However, one thing is certain: universities and in-person learning centers will never become obsolete because of MOOCs. Still, MOOCs are another great option, especially in today’s world where higher education is becoming increasingly expensive and difficult to access.\nIn fact, in the future—when MOOCs are more widespread and gain global recognition—I believe that students who follow a well-structured MOOC learning path could be just as well-prepared for the job market as those who attend in-person institutions.\nFrom a practical perspective, while most of the material covered in these courses is already available online in some form, the real appeal of MOOCs is that they curate and present information in a structured, didactic way. This allows anyone, for free, at any time, from anywhere, to simply start learning.\nIn short, MOOCs open doors for people who want to learn and expand their knowledge but cannot attend in-person courses for various reasons—whether it\u0026rsquo;s scheduling conflicts, limited class availability, or financial constraints. Ultimately, the only limit to how much you can learn is the one you set for yourself.\nAnother major advantage is that, given Spain’s current economic situation and high unemployment rates, MOOCs are a great option for those who have lost their jobs. They provide an opportunity to gain new skills and retrain—requiring only a computer and an internet connection—while maintaining flexibility for job hunting or other commitments.\nI’m writing this article in hopes that it helps anyone eager to learn. To make it more useful, here’s a list of all the MOOC platforms I know of so far:\nIn Spanish:\nMiriadaX: So far, this is the only Spanish-language MOOC platform I know of. It’s relatively new, having launched on February 1st. As I mentioned, I’ve enrolled in an Android course here. What makes this platform unique is that it’s backed by a network of Spanish and Latin American universities (Universia), which ensures a certain level of quality in the course content. Overall, it’s a solid platform. The only thing I miss is the ability to create structured learning paths that could lead to a master\u0026rsquo;s degree or even—why not?—a full university degree. But I imagine that’s something they may introduce over time.\nMy personal experience has been positive so far. Considering it’s a newly launched platform with 50,000 students enrolled, I haven’t encountered any major issues. Registration is simple, and enrolling in a course is even easier.\nEach course module is designed to be completed in three weeks. Right now, courses have fixed start and end dates. However, I believe that, since this is an online platform, it would make more sense to allow students to enroll whenever they want and have their enrollment date determine the start of the course. Otherwise, if someone discovers an Android course a month after enrollment closes, they’ll have to wait for the next session.\nAs for certification, it’s still unclear whether they’ll offer any official recognition. But let’s be honest—most people take these courses not to add them to their résumés, but simply to learn. (Though if they did provide a certificate, that would be a great bonus!)\nEn inglés:\ntheWEU The World Education University: is a MOOC platform created in the United States that hasn’t launched yet, but it looks very promising. They already have a catalog of upcoming courses, master’s programs, and even full university degrees. (Yes, you read that right—university degrees!). The range of courses is impressive, and if it delivers on its promises, it could be a fantastic option for anyone in the world with internet access. It’s expected to launch in early February, so we’ll have to see how it performs.\nCoursera\nCoursera is essentially the English-language equivalent of MiriadaX. It consists of 33 universities (mostly English-speaking, with a few French institutions as well).\nI haven’t personally used this platform yet, but it’s the oldest of the three listed here, and consequently, it has the largest student base—around 2.5 million, according to their website.\nCoursera offers a wide range of courses across multiple disciplines. They do provide a certificate upon course completion, though I’m not sure how widely recognized it is.\nConclusion As you can see, MOOCs are growing rapidly, offering valuable knowledge at the best price—free! And with the most flexible schedule—whatever works best for you.\nI’m sure there are other MOOC platforms I haven’t mentioned, but I believe the ones listed here are the most well-known.\n","permalink":"http://localhost:1313/en/posts/moocs/","summary":"\u003cp\u003eI\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to \u003ca href=\"https://es.wikipedia.org/wiki/Massive_Open_Online_Course\"\u003ewikipedia\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhy talk about MOOCs?\nBecause in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\u003c/p\u003e","title":"MOOCs, ¿El futuro de la enseñanza?"},{"content":"Debido a una reunión en la Comisión Europea para la revisión de un proyecto de investigación europeo en el que trabajé (llamado SMEPP), tuve la oportunidad de visitar (de forma breve) Bruselas, en Bégica.\nMe alojé en un hotel situado en el distrito de financiero de Bruselas. Su ubicación es bastante buena, estando bastante cerca de la estación Gare du Nord, y a un paseo agradable del centro histório (de la Grand Place).\nEn esa visita, y durante la reunión, que se llevó a cabo en unas oficinas de la Comisión Europea, pude comprobar el estilo de vida de Bruselas, en el que, como en la mayoría de centro europa, se almuerza a las 12, y es muy típico que sea un sandwich con ensalada o sopa para tomarlo, si hay algo de sol, en el parque mas cercano al puesto de trabajo.\nFue un viaje muy enriquecedor en todos los aspectos. Desde el punto de vista profesional, el hecho de asistir a una de las revisiones del proyecto en el que trabajaba en las oficinas de la comisión europea, fue toda una experiencia y que permite darte la perspectiva de estar trabajando en un proyecto de importancia, a nivel europeo. Para mí, un detalle tan simple como el tener la acreditación temporal, para poder acceder al recinto, ya fue en si mismo una experiencia. Del mismo modo, durante todo el proyecto, conocí el proceso de desarrollo, en el que estaba inmerso, junto con las evaluaciones periódicas por parte de la comisión, lo cual me hizo crecer como ingeniero.\nDesde el punto de vista personal, este viaje me dió la posibilidad de poder visitar la capital Europea. Aunque la visita fue efímera, si que me dió tiempo para visitar los lugares que no te puedes perder, por muy fugaz que sea la visita.\nNo podía faltar la Grand-Place, un lugar carismático de la ciudad, que no necesita presentación. Una vez dentro de la plaza, mires donde mires, encuentras monumentos históricos, que impresionan. Como la mayoría del tiempo, durante mi visita, la plaza estaba llena de gente, en el que se podía adivinar el trasiego de los ciudadanos de Bruselas, de camino a sus trabajos, casas o quehaceres diarios, mezclado con los turistas como yo, que tomabamos la plaza en su gran mayoría, todo, eso sí, con cámaras de fotos en mano.\nUna vez en el centro, es facil perderse en las calles cercanas a la Grand Place, en busca del famoso Manneken Pis. Afortunadamente, en las calles aledañas hay señales que simplifican su búsqueda.\nDurante mi busqueda pude encontrar multitud de tiendas de productos típicos, tales como gofres, y del famosisimo chocolate belga, de las más exclusivas, como Godiva a tiendas mas de barrios donde se ofrecen probar la deliciosa fuente de chocolate.\nDespués de un agradable paseo por las calles del centro, y después de probar algun bombón de delicioso chocolate belga y hacer algunas compras, pude encontrar el famoso monumento Manneken Pis.\nEn esta ocasión, el niño estaba al natural, sin ningún traje ni disfraz. Ya que al parecer es muy típico que lo vistan de trajes típicos, debido a celebraciones locales y otros eventos.\nMe costó un poco pero conseguí hacer una foto sin sacar ninguna cabeza de ningún turista!\nDurante el paseo por el centro pude ver una estatua de bronce, de un Cristo, en su momento no tenía ni idea de que era, después la busqué en Internet y resulta que es el Cristo Everard Serclaes. Junto a la estatua había un goteo incesante de turistas tomando fotos, y tocando el brazo del Cristo, que al parecer da suerte.\nContinué en mi paseo hasta que llegué a unos jardines que, en el momento de mi visita no sabía su nombre (lo malo de no tener una guía de viaje), pero que despues descubrí que son los jardines Mont des Arts. Un lugar muy recomendable, no solo por los jardines en sí, sino por las magnificas vistas que se obtienen de la ciudad.\nNo podía dejar Bruselas sin probar una cerveza típica de allí, asi que de camino al hotel paré en la terraza de una cervecería donde pude disfrutar de una Duvel, con los últimos rayos del sol del día.\nComo puedes ver, me dejé un monton de sitios por visitar en la capital Belga, pero es lo que pude visitar en el tiempo que tuve disponible antes de mi vuelta. Por tanto, una buena razon para volver algun día, para visitar el Atomium, entre otros tantos sitios que no he podido en esta ocasión.\nOs recomiendo su visita, ya que la ciudad es espectacular, a lo que hay que añadir su excelente ubicación, con otras ciudades europeas muy famosas a tiro de piedra, como son Brujas, Gante, Amberes, Lieja entre otras.\n","permalink":"http://localhost:1313/en/posts/brussels/","summary":"\u003cp\u003eDebido a una reunión en la Comisión Europea para la revisión de un proyecto de investigación europeo en el que trabajé (llamado SMEPP), tuve la oportunidad de visitar (de forma breve) Bruselas, en Bégica.\u003c/p\u003e\n\u003cp\u003eMe alojé en un hotel situado en el distrito de financiero de Bruselas. Su ubicación es bastante buena, estando bastante cerca de la estación Gare du Nord, y a un paseo agradable del centro histório (de la Grand Place).\u003c/p\u003e","title":"Brussels"},{"content":"Hello English!\n","permalink":"http://localhost:1313/en/posts/hello-world/","summary":"\u003cp\u003eHello English!\u003c/p\u003e","title":"Hello World"},{"content":"I just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\nNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\nUpdating the system Keeping the system updated is very important to get the latest security patches and an optimized system.\n1. First, update the local package index by running the following command in the terminal:\nsudo apt update\nThen, upgrade the packages to their latest versions with this command:\nsudo apt upgrade\nFinally, open the App Center to check if any applications have pending updates.\n2. Get familiar with the GNOME environment Although I have used Linux and specifically Ubuntu before, I use Windows daily. GNOME is very intuitive, but it\u0026rsquo;s a good idea to spend some time exploring its options, menus, applications, and generally getting familiar with the system.\n3. Customize the desktop In the Settings menu, you\u0026rsquo;ll find tools to personalize the system. The Appearance section is especially useful, where you can enable dark mode, change the wallpaper, and adjust the position of the taskbar.\n4. Install your preferred software The easiest way to install software is by using the App Center, where you\u0026rsquo;ll find many popular applications.\nIn my case, I have already installed some basic applications that I use frequently and will add more as needed:\nBrave, this browser looks great, and I want to try it. Ubuntu comes with Firefox by default. Visual Studio Code, a very versatile software development environment. Element, a Matrix client. 5. Security first: Enable and configure the firewall Ubuntu includes the UFW (Uncomplicated Firewall), which is very simple to configure and effective. To configure it, use these terminal commands.\nTo check the current firewall status:\nsudo ufw status\nBy default, it will be inactive, so activate it with this command:\nsudo ufw enable\nThen, set a minimal policy by denying incoming connections by default and allowing outgoing ones:\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nNext, allow exceptions for browsing the Internet (enabling HTTP and HTTPS ports) and for accessing the computer via SSH:\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw allow ssh\n6. More advanced steps Many guides mention the possibility of enabling Flatpak, an alternative to Snap, Ubuntu\u0026rsquo;s default package manager. Each has its advantages and disadvantages, so it\u0026rsquo;s advisable to do some research before making a decision. You can find more details about both package systems at this link.\nConclusion My last experience with Ubuntu was a few years ago, and now that I’ve returned to it, I can say the evolution has been impressive. It has improved in compatibility with older hardware and now offers a much more polished and efficient experience. In my case, installing Ubuntu on my MacBook Air was a great decision: the device went from being barely usable to having excellent speed, ease of use, and full compatibility.\nWith these steps, you now have a solid foundation to start exploring Ubuntu!\n","permalink":"http://localhost:1313/en/posts/ubuntu24firststeps/","summary":"\u003cp\u003eI just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\u003c/p\u003e\n\u003cp\u003eNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\u003c/p\u003e","title":"First steps with a fresh Ubuntu 24.04"},{"content":"I\u0026rsquo;ve got a 2015 MacBook Air with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\nThe installation and usage experience with Ubuntu has improved a lot since the last time I tried it about six or seven years ago. The process is super simple and effective. Thanks to Ubuntu, my laptop has regained its speed! Now I’ll walk you through the installation process step by step:\nPrerequisites The old laptop/desktop and a bit of motivation.\nAn USB drive of at least 8 GB (in my case, I used a 128 GB one, which is more than enough).\nStep-by-Step Installation of Ubuntu 1. Download Ubuntu: First, download the Ubuntu image from its official website. You can do this from the same laptop (if it’s still usable) or from another computer, as I did. Which version should you choose? I recommend the latest LTS (Long-Term Support) version, which guarantees 5 years of maintenance and security updates. I installed Ubuntu 24.04 LTS.\n2. Create a Bootable USB: The downloaded image is in .iso format, which is a disk image. To create the bootable USB on Windows, I used the program Balena Etcher, which is simple and effective. This software basically follows three steps:\nSelect the image: Click on “Flash from file” and choose the .iso file you downloaded. Select the destination drive: Make sure to choose the USB drive and not your computer’s hard drive. Start the process: Verify that everything is correct and click on “Flash”. The writing and verification may take a few minutes. Installing Ubuntu on the MacBook 1. Boot from the USB Drive: Connect the USB drive to the MacBook (which should be turned off), and turn it on while holding down the Option/Alt (⌥) key. The recognized boot disks will appear, and you must select the USB drive icon.\n2. Try Before Installing: Once Ubuntu starts, it offers you two options: “Try” or “Install Ubuntu”. I recommend choosing “Try” to check if it recognizes all the important drivers. In my case, it recognized everything! From the backlit keyboard to the trackpad, WiFi, and the special keys.\n3. Install Ubuntu: When you’re ready, click on the installation icon that appears on the Ubuntu desktop. The process is completely guided and very intuitive. You only need to choose the language, keyboard layout, and time zone. After a few minutes, Ubuntu was installed and ready to use.\nResults and Conclusions And voilà! My MacBook Air is alive again. With Ubuntu, its performance is much smoother, boot times are fast, and the user experience is excellent. Although I couldn’t compare the performance directly because I didn’t run tests before formatting macOS, I assure you that the change is incredible: the laptop flies!\nSo, if you have an old computer and think that your only option is to recycle or throw it away, consider installing Linux. You can give it a second life with Ubuntu, Mint, or any other distribution. My recommendation is Ubuntu, because as I’ve mentioned, the process was simple and the result, fantastic.\nSee you next time!\n","permalink":"http://localhost:1313/en/posts/ubuntu-macbook/","summary":"\u003cp\u003e\u003cstrong\u003eI\u0026rsquo;ve got a 2015 MacBook Air\u003c/strong\u003e with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\u003c/p\u003e","title":"Installing Ubuntu on a Macbook Air from 2015"},{"content":"\nDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across DietPi, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\nOn the DietPi website, they showcase how optimized this Linux distribution is. You can check out a comparison with other SBCs and distributions here. Note! This comparison doesn’t claim that DietPi is better than other distributions, only that it is significantly lighter.\nAnother major advantage of this distribution is its extensive software selection, making installation extremely simple for users. You can check out the complete list of available software here.\nAfter reading about all the benefits of DietPi, I had to try it on my Raspberry Pi 1 to see how well it performs.\nInstalling DietPi on a Raspberry Pi 1 The DietPi website provides a detailed installation guide, which you can check out here. However, here’s a quick summary of my experience and the steps I followed (it was really simple):\nChoose and download the image that corresponds to your miniPC (in my case, the Raspberry Pi 1).\nThe downloaded file is not an .iso but a compressed archive. You need a program like 7zip to extract it easily.\nUsing Balena Etcher, flash the extracted image to the microSD card. After flashing the image, do not remove the microSD from your computer yet. Open the file explorer (if you’re using Windows) and look for the file dietpi.txt. This file allows you to preconfigure DietPi, so it automatically applies settings on first boot.\nI opened it with Notepad++ and made a few modifications:\nAUTO_SETUP_LOCALE=es_ES.UTF-8 → Sets the regional locale.\nAUTO_SETUP_KEYBOARD_LAYOUT=es → Configures the keyboard (useful for SSH connections).\nAUTO_SETUP_TIMEZONE=Europe/Madrid → Sets the correct timezone.\nAUTO_SETUP_NET_WIFI_COUNTRY_CODE=ES → (Optional) Defines the WiFi country code.\nAUTO_SETUP_NET_USESTATIC=1 → Enables a static IP address instead of DHCP.\nAUTO_SETUP_NET_STATIC_IP=192.168.0.100 → Sets a specific local IP for the Raspberry Pi.\nAUTO_SETUP_NET_STATIC_MASK=255.255.255.0 → Configures the network mask (usually left unchanged).\nAUTO_SETUP_NET_STATIC_GATEWAY=192.168.0.1 → Defines the router’s IP address.\nAUTO_SETUP_NET_STATIC_DNS=9.9.9.9 149.112.112.112 → Uses Quad9 as the DNS provider (you can change this).\nAUTO_SETUP_NET_HOSTNAME=DietPi → Sets the Raspberry Pi’s hostname on the network.\nAUTO_SETUP_HEADLESS=1 → Disables HDMI output to save resources (since I’ll always use SSH).\nAUTO_SETUP_AUTOMATED=1 → Enables an automated installation using the predefined dietpi.txt settings.\nAfter modifying dietpi.txt, I inserted the microSD into the Raspberry Pi, connected an Ethernet cable (it was easier than setting up a USB WiFi adapter), and powered it on. I was confident that my configurations would work, so I didn’t connect a monitor or keyboard. I simply waited for it to appear on my network at the configured IP. At first, I thought something had gone wrong… but voilà! After about 2–3 minutes (yes, I’m impatient), it showed up on the network, and I connected via SSH.\nOnce connected, I could see the setup process in action. The system performed an initial apt-get update and asked a few questions:\nWould I like to participate in anonymous statistics?\nWould I like to change the root and dietpi user passwords? (A must for security!)\nShould I keep the Raspberry Pi’s serial output enabled? (Useful for debugging, but if you don’t have a serial cable, it’s better to disable it to save resources.)\nThe most interesting part is the \u0026ldquo;Browse software\u0026rdquo; option, which provides a huge list of installable software.\nAt this point, I had DietPi up and running, but… what should I use it for? I started researching projects online, and recently, I’ve found Reddit to be an amazing resource—it’s full of useful ideas!\nHere are some projects I found for a Raspberry Pi 1 running DietPi:\nPi-hole → A network-wide ad blocker that filters ads and tracking requests at the DNS level.\nA child\u0026rsquo;s first computer → With a few tweaks and a friendly interface, it could be a great first PC for a kid.\nA centralized print server → To connect old non-networked printers.\nVPN server, Home Assistant, Retro gaming, or a Minecraft server → These options require more computing power (Raspberry Pi 3 or higher is recommended).\nFor now, I’ve decided to set up Pi-hole on my Raspberry Pi 1 to test how well it performs. Let’s see if it’s as good as people say!\nThat’s it for now! In my next post, I’ll walk you through the Pi-hole installation process, how I configured it, and how it works—so you can decide if it’s something worth trying. See you next time! 🚀\n","permalink":"http://localhost:1313/en/posts/dietpi-raspi1/","summary":"\u003cp\u003e\u003cimg alt=\"Raspberry pi 1 image\" loading=\"lazy\" src=\"https://images.prismic.io/rpf-products/3dc09a41-c237-4d2c-a9b8-c92eb3dc98e8_B%2B+ANGLE+1+REFRESH.jpg?auto=compress%2Cformat\u0026fit=max\"\u003e\u003c/p\u003e\n\u003cp\u003eDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across \u003ca href=\"https://dietpi.com/\"\u003eDietPi\u003c/a\u003e, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\u003c/p\u003e","title":"DietPi, the operating system to give new life to a Raspberry Pi 1"},{"content":"\nOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\nFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\nLetterboxd: This is a social network where you can rate the movies you’ve watched. I tried it—it’s well-designed, works smoothly, but… what about TV series? That’s why I decided it wasn’t the best option. For the same reason, I ruled out other apps like Moviebase, SeriesGuide, and Cinetrak.\nIMDb: This app allows you to track both movies and TV series and works well. Based on your ratings, it recommends content you might like. However, after testing it, I found it a bit difficult to generate a list of all the movies and series I watched throughout the year.\nJustWatch: The biggest advantage of this app is that, in addition to letting me rate movies and series, it also provides recommendations for content I might enjoy. A great feature is that it tells you which platform each movie or show is available on. Like any app, it’s not a perfect fit for my preferences since it’s not a social network, but it’s the closest to what I was looking for.\nFor now, JustWatch is the winner, but I’ll keep looking to see if I find another app that I like even more.\nDo you know of any other apps that meet my needs? I’d love to hear your suggestions in the comments!\n","permalink":"http://localhost:1313/en/posts/movies-series-app/","summary":"\u003cp\u003e\u003cimg alt=\"Image of a TV remote controller\" loading=\"lazy\" src=\"/images/tv-series.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\u003c/p\u003e\n\u003cp\u003eFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\u003c/p\u003e","title":"Where to store watched movies/series?"},{"content":"\nThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\nAnd here’s the list of books I’ve selected to read (at least for now):\nThink Like a Monk: Train Your Mind for Peace and Purpose Every Day. Jay Shetty. This is the book I’m currently reading and the first of the year. I’m already three-quarters of the way through, and it’s great! However, there are paragraphs I need to read twice to fully grasp all the lessons inside. It’s highly, highly recommended.\nThe Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win. Gene Kim, Kevin Behr, George Spafford. This was a Christmas gift and a book I’ve wanted to read for a long time. Apparently, it humorously illustrates the conflict between Dev and Ops and how DevOps emerges from it.\nDeep Work. Rules For Focused Success In A Distracted World. Cal Newport. I’m eager to read this book because, even though it seems obvious, staying focused while working is quite difficult nowadays.\nLa sombra del viento. Carlos Ruiz Zafón. Not everything has to be about learning, so I’ve chosen this super famous novel. Everyone who reads frequently recommends it to me. The thing is, I started it years ago but didn’t get hooked—so I’m giving it another chance!\nCatching fire. The Hunger Games 2. Suzanne Collings. I bought the trilogy and read the first two books, but then I watched all the movies, and reading the final book lost a bit of its charm since I already know how it ends. However, I don’t like leaving a series unfinished, so I’m going to read it.\nThat’s it! This is my reading commitment for the year. By the end of 2024, I’ll post an update, and it’ll also be on my GoodReads profile.\nAnd what about you? What are you planning to read this year?\n","permalink":"http://localhost:1313/en/posts/books2024/","summary":"\u003cp\u003e\u003cimg alt=\"Image of books I read in 2024\" loading=\"lazy\" src=\"/images/books2024.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\u003c/p\u003e\n\u003cp\u003eAnd here’s the list of books I’ve selected to read (at least for now):\u003c/p\u003e","title":"Books for 2024"},{"content":"Hi! I\u0026rsquo;m Javier Barbarán 👋 I\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\n🚀 Experience Software development with various technologies Creating technical and educational content Contributing to open-source projects 📩 Contact If you\u0026rsquo;d like to reach out, you can find me on LinkedIn or Twitter.\n","permalink":"http://localhost:1313/en/about/","summary":"\u003ch2 id=\"hi-im-javier-barbarán-\"\u003eHi! I\u0026rsquo;m Javier Barbarán 👋\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\u003c/p\u003e\n\u003ch3 id=\"-experience\"\u003e🚀 Experience\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSoftware development with various technologies\u003c/li\u003e\n\u003cli\u003eCreating technical and educational content\u003c/li\u003e\n\u003cli\u003eContributing to open-source projects\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"-contact\"\u003e📩 Contact\u003c/h3\u003e\n\u003cp\u003eIf you\u0026rsquo;d like to reach out, you can find me on \u003ca href=\"https://www.linkedin.com/in/javierbarbaran/\"\u003eLinkedIn\u003c/a\u003e or \u003ca href=\"https://x.com/javibarbaran\"\u003eTwitter\u003c/a\u003e.\u003c/p\u003e","title":"About Me"},{"content":"\nIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\nIn software development companies, it is common practice to impose deadlines for projects that are generally unachievable for development teams—whether due to client commitments, costs, or other reasons. As a result, teams are pressured to develop software as quickly as possible to minimize delivery delays (because, let’s face it, there will be delays). To meet these deadlines, developers often sacrifice essential development practices that ensure a minimum level of quality, such as Test-Driven Development (TDD), the use of continuous integration tools, or refactoring the code as it is written. These practices help eliminate code duplication, improve readability, and follow principles such as the Single Responsibility Principle (SRP), among many others that make up what is now known as Clean Code.\nThis is bad news—very bad news. The result is that a software product will be delivered functionally in a short time and with minimal staff, but at what cost? The developed software will be incredibly difficult to maintain, there will be no unit tests to verify system functionality (meaning that adding new features may break something else without anyone realizing), and code readability will likely be questionable at best.\nOn Javier Garzas\u0026rsquo;s blog (highly recommended), I remember reading a post stating—very accurately—that the role of software engineers is to passionately advocate to their companies that software quality is not just recommended but essential. Yes, ensuring quality means that development may initially be slower, but the long-term benefits are enormous. The post also included an analogy—a bit extreme, but it clearly illustrates the point:\nA patient about to undergo an appendectomy, already in the operating room, sees the surgeon washing their hands and instruments and says: - \u0026ldquo;Come on, doctor, don’t wash your hands, it doesn’t matter, just operate on me now! I’ll pay you, and I say there’s no time to waste.\u0026rdquo; -\nOf course, the surgeon, as part of their duty, refuses the request and insists on sterilizing everything before proceeding. Yes, this takes extra time, but skipping it would likely lead to severe post-operative complications.\nAnd that is precisely the development team\u0026rsquo;s mission when dealing with their company: to emphasize the importance of Clean Code or to accept the consequences of rushed, low-quality development.\nFor those who are still unsure—what exactly is Clean Code? A quick search on the internet will bring up Wikipedia, blogs, and plenty of articles on the topic. But I found a book titled simply Clean Code. It\u0026rsquo;s available on Amazon at this link. I checked the reviews (all excellent) and bought it without hesitation. As the title suggests, this book makes a strong statement of intent. And I have to say—it does not disappoint.\nIn my opinion, the book is incredibly thorough, covering all aspects of good programming with clear examples of what should and shouldn’t be done. Some may argue that these concepts are taught in computer science degrees, but nowadays, more and more programmers come from non-CS backgrounds. And even if you\u0026rsquo;ve learned these principles before, it’s always good to have them fresh in your mind. That’s why I firmly believe this book should be required reading for all software professionals—whether they have a formal CS background or not.\nBeyond Clean Code, the book also covers topics such as concurrency and design patterns. Some of its advice may seem trivial to experienced developers, but these reminders are incredibly important—especially in a corporate environment where new features and changes are constantly demanded yesterday. The goal? To write Clean Code and take pride in what we build.\nIs this the only book on the subject? Not at all. There are countless great books and blog posts on Clean Code, Test-Driven Development (TDD), and other methodologies. However, I personally found this book particularly clear, direct, and, above all, useful.\n","permalink":"http://localhost:1313/en/posts/cleancode/","summary":"\u003cp\u003e\u003cimg alt=\"Portada del libro Clean Code\" loading=\"lazy\" src=\"/images/cleancode.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\u003c/p\u003e","title":"Clean code"},{"content":"My Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that it took forever to turn on, animations and transitions were painfully slow, and even opening the browser with a simple webpage was a struggle… In short, all sorts of performance issues that I blamed on the new Android version, since the problems started right after the update.\nConsidering that, as of today, there doesn’t seem to be any 5.0.3 or higher update on the horizon, I thought… either I fix it, or I’m left with a fancy Nexus-branded paperweight.\nAfter searching online, I found that some Nexus 7 users (especially the 2012 version) were experiencing issues with this update. However, most of the problems were related to WiFi or Bluetooth, rather than performance. This link lists some possible fixes:\nhttp://www.gottabemobile.com/2014/12/29/android-5-0-2-problems-fixes/\nFor my specific issue, I found three possible solutions:\nAccess a hidden Google menu and follow a series of steps. Factory reset the tablet, which would erase all my data, apps, etc. Root the tablet and install Android KitKat, which had been working fine. In any case, it seemed like the solution involved deleting data and apps. Well, none of these three solutions worked for me.\nI had an app installed to extend battery life (I won’t mention the name to avoid any trouble), and I thought it might be conflicting with Android 5.0.2—since one of the new version’s selling points was improved battery life. I uninstalled it, and BOOM! The tablet was running as smoothly as it did with KitKat.\nSo, in conclusion, if you’re reading this post because you\u0026rsquo;re having issues with your Nexus 7, before trying anything complicated, check your apps! Be suspicious of the latest ones you installed, as they might not be updated to work with the new Android version. Uninstall them first. If that doesn’t fix it… well, then you can start thinking about rooting your device.\n","permalink":"http://localhost:1313/en/posts/googlenexus2012-android502/","summary":"\u003cp\u003eMy Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that \u003cstrong\u003eit took forever to turn on\u003c/strong\u003e, \u003cstrong\u003eanimations and transitions were painfully slow, and even opening the browser with a simple webpage\u003c/strong\u003e was a struggle… In short, all sorts of \u003cem\u003eperformance issues\u003c/em\u003e that I blamed on the new Android version, since the problems started right after the update.\u003c/p\u003e","title":"Google Nexus 2012 y Android 5.0.2"},{"content":"\nSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is Fog Computing? Is it just another marketing buzzword rather than a real concept?\nWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\nEssentially, the IoT consists of two main components: Cloud Computing and hardware devices deployed in the real world, connected to the cloud. Fog Computing focuses on processing data between the hardware and the cloud. For example, imagine a door with an electronic lock and an RFID reader that controls access to a room. With Fog Computing, the door itself could decide whether to grant access without needing to contact the cloud for credential verification—saving data, battery life, and reducing latency.\nNow, what would happen in a Cloud Computing setup? Would the system need to communicate with the cloud to verify access? And what if there’s no connection or the network is slow? In that case, you could end up waiting at the door for a long time or even being unable to enter, despite having the correct credentials.\nSo, is Fog Computing the same as Cloud Computing? The answer largely depends on how we define Cloud Computing. Nobody says that cloud computing can’t involve processing some data locally—after all, that’s the whole point of making devices increasingly “smart” and capable of computing certain information before sending it to the cloud.\nTherefore, in conclusion—and this is just my personal opinion—Fog Computing is a very interesting concept, and it can certainly help clarify how certain devices operate. However, if we take a broad definition of Cloud Computing, Fog Computing could be considered just a subset of it.\nResources:\nhttp://bitelia.com/2014/04/fog-computing\nhttp://www.cisco.com/web/about/ac50/ac207/crc_new/university/RFP/rfp13078.html\n","permalink":"http://localhost:1313/en/posts/fog-computing/","summary":"\u003cp\u003e\u003cimg alt=\"Paisaje con niebla\" loading=\"lazy\" src=\"/images/fog.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is \u003cem\u003eFog Computing\u003c/em\u003e? Is it just another marketing buzzword rather than a real concept?\u003c/p\u003e\n\u003cp\u003eWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\u003c/p\u003e","title":"Fog computing"},{"content":"Hace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es, sorpresa!!, OpenJDK.\nAsí que os dejo aquí los pasos que tuve que hacer para instalarlo:\n(Tened en cuenta que en el momento de escribir este post la versión de Java era la 6, asi que tenedlo en cuenta y poned el número de la versión que querais instalar)\nsudo apt-get install openjdk-6-jdk\napt-cache search jdk\nCon estas dos sencillas opciones se instala. Espero que os sirva.\n","permalink":"http://localhost:1313/en/posts/jdk-ubuntu1004/","summary":"\u003cp\u003eHace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es,  sorpresa!!, OpenJDK.\u003c/p\u003e","title":"Instalar Java JDK en Ubuntu 10.04 Lucyd Lynx"},{"content":"I\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to wikipedia.\nWhy talk about MOOCs? Because in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\nPros and cons of this type of learning:\nPros: Almost all are free. Since they’re online, each student can manage their own schedule and access the course whenever and wherever they want (as long as they have an internet connection).\nCons: You won’t receive an official certificate upon completion. At most, you may get a document stating that you completed the course, but its validity is questionable since it’s difficult to verify that the person taking the course is actually who they claim to be. (Perhaps the use of digital certificates would help, but even then, additional measures would be needed.)\nGoing back to the title of this article, the question is somewhat rhetorical, as it\u0026rsquo;s impossible to predict the evolution of these tools. However, one thing is certain: universities and in-person learning centers will never become obsolete because of MOOCs. Still, MOOCs are another great option, especially in today’s world where higher education is becoming increasingly expensive and difficult to access.\nIn fact, in the future—when MOOCs are more widespread and gain global recognition—I believe that students who follow a well-structured MOOC learning path could be just as well-prepared for the job market as those who attend in-person institutions.\nFrom a practical perspective, while most of the material covered in these courses is already available online in some form, the real appeal of MOOCs is that they curate and present information in a structured, didactic way. This allows anyone, for free, at any time, from anywhere, to simply start learning.\nIn short, MOOCs open doors for people who want to learn and expand their knowledge but cannot attend in-person courses for various reasons—whether it\u0026rsquo;s scheduling conflicts, limited class availability, or financial constraints. Ultimately, the only limit to how much you can learn is the one you set for yourself.\nAnother major advantage is that, given Spain’s current economic situation and high unemployment rates, MOOCs are a great option for those who have lost their jobs. They provide an opportunity to gain new skills and retrain—requiring only a computer and an internet connection—while maintaining flexibility for job hunting or other commitments.\nI’m writing this article in hopes that it helps anyone eager to learn. To make it more useful, here’s a list of all the MOOC platforms I know of so far:\nIn Spanish:\nMiriadaX: So far, this is the only Spanish-language MOOC platform I know of. It’s relatively new, having launched on February 1st. As I mentioned, I’ve enrolled in an Android course here. What makes this platform unique is that it’s backed by a network of Spanish and Latin American universities (Universia), which ensures a certain level of quality in the course content. Overall, it’s a solid platform. The only thing I miss is the ability to create structured learning paths that could lead to a master\u0026rsquo;s degree or even—why not?—a full university degree. But I imagine that’s something they may introduce over time.\nMy personal experience has been positive so far. Considering it’s a newly launched platform with 50,000 students enrolled, I haven’t encountered any major issues. Registration is simple, and enrolling in a course is even easier.\nEach course module is designed to be completed in three weeks. Right now, courses have fixed start and end dates. However, I believe that, since this is an online platform, it would make more sense to allow students to enroll whenever they want and have their enrollment date determine the start of the course. Otherwise, if someone discovers an Android course a month after enrollment closes, they’ll have to wait for the next session.\nAs for certification, it’s still unclear whether they’ll offer any official recognition. But let’s be honest—most people take these courses not to add them to their résumés, but simply to learn. (Though if they did provide a certificate, that would be a great bonus!)\nEn inglés:\ntheWEU The World Education University: is a MOOC platform created in the United States that hasn’t launched yet, but it looks very promising. They already have a catalog of upcoming courses, master’s programs, and even full university degrees. (Yes, you read that right—university degrees!). The range of courses is impressive, and if it delivers on its promises, it could be a fantastic option for anyone in the world with internet access. It’s expected to launch in early February, so we’ll have to see how it performs.\nCoursera\nCoursera is essentially the English-language equivalent of MiriadaX. It consists of 33 universities (mostly English-speaking, with a few French institutions as well).\nI haven’t personally used this platform yet, but it’s the oldest of the three listed here, and consequently, it has the largest student base—around 2.5 million, according to their website.\nCoursera offers a wide range of courses across multiple disciplines. They do provide a certificate upon course completion, though I’m not sure how widely recognized it is.\nConclusion As you can see, MOOCs are growing rapidly, offering valuable knowledge at the best price—free! And with the most flexible schedule—whatever works best for you.\nI’m sure there are other MOOC platforms I haven’t mentioned, but I believe the ones listed here are the most well-known.\n","permalink":"http://localhost:1313/en/posts/moocs/","summary":"\u003cp\u003eI\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to \u003ca href=\"https://es.wikipedia.org/wiki/Massive_Open_Online_Course\"\u003ewikipedia\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhy talk about MOOCs?\nBecause in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\u003c/p\u003e","title":"MOOCs, ¿El futuro de la enseñanza?"},{"content":"Debido a una reunión en la Comisión Europea para la revisión de un proyecto de investigación europeo en el que trabajé (llamado SMEPP), tuve la oportunidad de visitar (de forma breve) Bruselas, en Bégica.\nMe alojé en un hotel situado en el distrito de financiero de Bruselas. Su ubicación es bastante buena, estando bastante cerca de la estación Gare du Nord, y a un paseo agradable del centro histório (de la Grand Place).\nEn esa visita, y durante la reunión, que se llevó a cabo en unas oficinas de la Comisión Europea, pude comprobar el estilo de vida de Bruselas, en el que, como en la mayoría de centro europa, se almuerza a las 12, y es muy típico que sea un sandwich con ensalada o sopa para tomarlo, si hay algo de sol, en el parque mas cercano al puesto de trabajo.\nFue un viaje muy enriquecedor en todos los aspectos. Desde el punto de vista profesional, el hecho de asistir a una de las revisiones del proyecto en el que trabajaba en las oficinas de la comisión europea, fue toda una experiencia y que permite darte la perspectiva de estar trabajando en un proyecto de importancia, a nivel europeo. Para mí, un detalle tan simple como el tener la acreditación temporal, para poder acceder al recinto, ya fue en si mismo una experiencia. Del mismo modo, durante todo el proyecto, conocí el proceso de desarrollo, en el que estaba inmerso, junto con las evaluaciones periódicas por parte de la comisión, lo cual me hizo crecer como ingeniero.\nDesde el punto de vista personal, este viaje me dió la posibilidad de poder visitar la capital Europea. Aunque la visita fue efímera, si que me dió tiempo para visitar los lugares que no te puedes perder, por muy fugaz que sea la visita.\nNo podía faltar la Grand-Place, un lugar carismático de la ciudad, que no necesita presentación. Una vez dentro de la plaza, mires donde mires, encuentras monumentos históricos, que impresionan. Como la mayoría del tiempo, durante mi visita, la plaza estaba llena de gente, en el que se podía adivinar el trasiego de los ciudadanos de Bruselas, de camino a sus trabajos, casas o quehaceres diarios, mezclado con los turistas como yo, que tomabamos la plaza en su gran mayoría, todo, eso sí, con cámaras de fotos en mano.\nUna vez en el centro, es facil perderse en las calles cercanas a la Grand Place, en busca del famoso Manneken Pis. Afortunadamente, en las calles aledañas hay señales que simplifican su búsqueda.\nDurante mi busqueda pude encontrar multitud de tiendas de productos típicos, tales como gofres, y del famosisimo chocolate belga, de las más exclusivas, como Godiva a tiendas mas de barrios donde se ofrecen probar la deliciosa fuente de chocolate.\nDespués de un agradable paseo por las calles del centro, y después de probar algun bombón de delicioso chocolate belga y hacer algunas compras, pude encontrar el famoso monumento Manneken Pis.\nEn esta ocasión, el niño estaba al natural, sin ningún traje ni disfraz. Ya que al parecer es muy típico que lo vistan de trajes típicos, debido a celebraciones locales y otros eventos.\nMe costó un poco pero conseguí hacer una foto sin sacar ninguna cabeza de ningún turista!\nDurante el paseo por el centro pude ver una estatua de bronce, de un Cristo, en su momento no tenía ni idea de que era, después la busqué en Internet y resulta que es el Cristo Everard Serclaes. Junto a la estatua había un goteo incesante de turistas tomando fotos, y tocando el brazo del Cristo, que al parecer da suerte.\nContinué en mi paseo hasta que llegué a unos jardines que, en el momento de mi visita no sabía su nombre (lo malo de no tener una guía de viaje), pero que despues descubrí que son los jardines Mont des Arts. Un lugar muy recomendable, no solo por los jardines en sí, sino por las magnificas vistas que se obtienen de la ciudad.\nNo podía dejar Bruselas sin probar una cerveza típica de allí, asi que de camino al hotel paré en la terraza de una cervecería donde pude disfrutar de una Duvel, con los últimos rayos del sol del día.\nComo puedes ver, me dejé un monton de sitios por visitar en la capital Belga, pero es lo que pude visitar en el tiempo que tuve disponible antes de mi vuelta. Por tanto, una buena razon para volver algun día, para visitar el Atomium, entre otros tantos sitios que no he podido en esta ocasión.\nOs recomiendo su visita, ya que la ciudad es espectacular, a lo que hay que añadir su excelente ubicación, con otras ciudades europeas muy famosas a tiro de piedra, como son Brujas, Gante, Amberes, Lieja entre otras.\n","permalink":"http://localhost:1313/en/posts/brussels/","summary":"\u003cp\u003eDebido a una reunión en la Comisión Europea para la revisión de un proyecto de investigación europeo en el que trabajé (llamado SMEPP), tuve la oportunidad de visitar (de forma breve) Bruselas, en Bégica.\u003c/p\u003e\n\u003cp\u003eMe alojé en un hotel situado en el distrito de financiero de Bruselas. Su ubicación es bastante buena, estando bastante cerca de la estación Gare du Nord, y a un paseo agradable del centro histório (de la Grand Place).\u003c/p\u003e","title":"Brussels"},{"content":"Hello English!\n","permalink":"http://localhost:1313/en/posts/hello-world/","summary":"\u003cp\u003eHello English!\u003c/p\u003e","title":"Hello World"},{"content":"I just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\nNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\nUpdating the system Keeping the system updated is very important to get the latest security patches and an optimized system.\n1. First, update the local package index by running the following command in the terminal:\nsudo apt update\nThen, upgrade the packages to their latest versions with this command:\nsudo apt upgrade\nFinally, open the App Center to check if any applications have pending updates.\n2. Get familiar with the GNOME environment Although I have used Linux and specifically Ubuntu before, I use Windows daily. GNOME is very intuitive, but it\u0026rsquo;s a good idea to spend some time exploring its options, menus, applications, and generally getting familiar with the system.\n3. Customize the desktop In the Settings menu, you\u0026rsquo;ll find tools to personalize the system. The Appearance section is especially useful, where you can enable dark mode, change the wallpaper, and adjust the position of the taskbar.\n4. Install your preferred software The easiest way to install software is by using the App Center, where you\u0026rsquo;ll find many popular applications.\nIn my case, I have already installed some basic applications that I use frequently and will add more as needed:\nBrave, this browser looks great, and I want to try it. Ubuntu comes with Firefox by default. Visual Studio Code, a very versatile software development environment. Element, a Matrix client. 5. Security first: Enable and configure the firewall Ubuntu includes the UFW (Uncomplicated Firewall), which is very simple to configure and effective. To configure it, use these terminal commands.\nTo check the current firewall status:\nsudo ufw status\nBy default, it will be inactive, so activate it with this command:\nsudo ufw enable\nThen, set a minimal policy by denying incoming connections by default and allowing outgoing ones:\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nNext, allow exceptions for browsing the Internet (enabling HTTP and HTTPS ports) and for accessing the computer via SSH:\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw allow ssh\n6. More advanced steps Many guides mention the possibility of enabling Flatpak, an alternative to Snap, Ubuntu\u0026rsquo;s default package manager. Each has its advantages and disadvantages, so it\u0026rsquo;s advisable to do some research before making a decision. You can find more details about both package systems at this link.\nConclusion My last experience with Ubuntu was a few years ago, and now that I’ve returned to it, I can say the evolution has been impressive. It has improved in compatibility with older hardware and now offers a much more polished and efficient experience. In my case, installing Ubuntu on my MacBook Air was a great decision: the device went from being barely usable to having excellent speed, ease of use, and full compatibility.\nWith these steps, you now have a solid foundation to start exploring Ubuntu!\n","permalink":"http://localhost:1313/en/posts/ubuntu24firststeps/","summary":"\u003cp\u003eI just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\u003c/p\u003e\n\u003cp\u003eNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\u003c/p\u003e","title":"First steps with a fresh Ubuntu 24.04"},{"content":"I\u0026rsquo;ve got a 2015 MacBook Air with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\nThe installation and usage experience with Ubuntu has improved a lot since the last time I tried it about six or seven years ago. The process is super simple and effective. Thanks to Ubuntu, my laptop has regained its speed! Now I’ll walk you through the installation process step by step:\nPrerequisites The old laptop/desktop and a bit of motivation.\nAn USB drive of at least 8 GB (in my case, I used a 128 GB one, which is more than enough).\nStep-by-Step Installation of Ubuntu 1. Download Ubuntu: First, download the Ubuntu image from its official website. You can do this from the same laptop (if it’s still usable) or from another computer, as I did. Which version should you choose? I recommend the latest LTS (Long-Term Support) version, which guarantees 5 years of maintenance and security updates. I installed Ubuntu 24.04 LTS.\n2. Create a Bootable USB: The downloaded image is in .iso format, which is a disk image. To create the bootable USB on Windows, I used the program Balena Etcher, which is simple and effective. This software basically follows three steps:\nSelect the image: Click on “Flash from file” and choose the .iso file you downloaded. Select the destination drive: Make sure to choose the USB drive and not your computer’s hard drive. Start the process: Verify that everything is correct and click on “Flash”. The writing and verification may take a few minutes. Installing Ubuntu on the MacBook 1. Boot from the USB Drive: Connect the USB drive to the MacBook (which should be turned off), and turn it on while holding down the Option/Alt (⌥) key. The recognized boot disks will appear, and you must select the USB drive icon.\n2. Try Before Installing: Once Ubuntu starts, it offers you two options: “Try” or “Install Ubuntu”. I recommend choosing “Try” to check if it recognizes all the important drivers. In my case, it recognized everything! From the backlit keyboard to the trackpad, WiFi, and the special keys.\n3. Install Ubuntu: When you’re ready, click on the installation icon that appears on the Ubuntu desktop. The process is completely guided and very intuitive. You only need to choose the language, keyboard layout, and time zone. After a few minutes, Ubuntu was installed and ready to use.\nResults and Conclusions And voilà! My MacBook Air is alive again. With Ubuntu, its performance is much smoother, boot times are fast, and the user experience is excellent. Although I couldn’t compare the performance directly because I didn’t run tests before formatting macOS, I assure you that the change is incredible: the laptop flies!\nSo, if you have an old computer and think that your only option is to recycle or throw it away, consider installing Linux. You can give it a second life with Ubuntu, Mint, or any other distribution. My recommendation is Ubuntu, because as I’ve mentioned, the process was simple and the result, fantastic.\nSee you next time!\n","permalink":"http://localhost:1313/en/posts/ubuntu-macbook/","summary":"\u003cp\u003e\u003cstrong\u003eI\u0026rsquo;ve got a 2015 MacBook Air\u003c/strong\u003e with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\u003c/p\u003e","title":"Installing Ubuntu on a Macbook Air from 2015"},{"content":"\nDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across DietPi, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\nOn the DietPi website, they showcase how optimized this Linux distribution is. You can check out a comparison with other SBCs and distributions here. Note! This comparison doesn’t claim that DietPi is better than other distributions, only that it is significantly lighter.\nAnother major advantage of this distribution is its extensive software selection, making installation extremely simple for users. You can check out the complete list of available software here.\nAfter reading about all the benefits of DietPi, I had to try it on my Raspberry Pi 1 to see how well it performs.\nInstalling DietPi on a Raspberry Pi 1 The DietPi website provides a detailed installation guide, which you can check out here. However, here’s a quick summary of my experience and the steps I followed (it was really simple):\nChoose and download the image that corresponds to your miniPC (in my case, the Raspberry Pi 1).\nThe downloaded file is not an .iso but a compressed archive. You need a program like 7zip to extract it easily.\nUsing Balena Etcher, flash the extracted image to the microSD card. After flashing the image, do not remove the microSD from your computer yet. Open the file explorer (if you’re using Windows) and look for the file dietpi.txt. This file allows you to preconfigure DietPi, so it automatically applies settings on first boot.\nI opened it with Notepad++ and made a few modifications:\nAUTO_SETUP_LOCALE=es_ES.UTF-8 → Sets the regional locale.\nAUTO_SETUP_KEYBOARD_LAYOUT=es → Configures the keyboard (useful for SSH connections).\nAUTO_SETUP_TIMEZONE=Europe/Madrid → Sets the correct timezone.\nAUTO_SETUP_NET_WIFI_COUNTRY_CODE=ES → (Optional) Defines the WiFi country code.\nAUTO_SETUP_NET_USESTATIC=1 → Enables a static IP address instead of DHCP.\nAUTO_SETUP_NET_STATIC_IP=192.168.0.100 → Sets a specific local IP for the Raspberry Pi.\nAUTO_SETUP_NET_STATIC_MASK=255.255.255.0 → Configures the network mask (usually left unchanged).\nAUTO_SETUP_NET_STATIC_GATEWAY=192.168.0.1 → Defines the router’s IP address.\nAUTO_SETUP_NET_STATIC_DNS=9.9.9.9 149.112.112.112 → Uses Quad9 as the DNS provider (you can change this).\nAUTO_SETUP_NET_HOSTNAME=DietPi → Sets the Raspberry Pi’s hostname on the network.\nAUTO_SETUP_HEADLESS=1 → Disables HDMI output to save resources (since I’ll always use SSH).\nAUTO_SETUP_AUTOMATED=1 → Enables an automated installation using the predefined dietpi.txt settings.\nAfter modifying dietpi.txt, I inserted the microSD into the Raspberry Pi, connected an Ethernet cable (it was easier than setting up a USB WiFi adapter), and powered it on. I was confident that my configurations would work, so I didn’t connect a monitor or keyboard. I simply waited for it to appear on my network at the configured IP. At first, I thought something had gone wrong… but voilà! After about 2–3 minutes (yes, I’m impatient), it showed up on the network, and I connected via SSH.\nOnce connected, I could see the setup process in action. The system performed an initial apt-get update and asked a few questions:\nWould I like to participate in anonymous statistics?\nWould I like to change the root and dietpi user passwords? (A must for security!)\nShould I keep the Raspberry Pi’s serial output enabled? (Useful for debugging, but if you don’t have a serial cable, it’s better to disable it to save resources.)\nThe most interesting part is the \u0026ldquo;Browse software\u0026rdquo; option, which provides a huge list of installable software.\nAt this point, I had DietPi up and running, but… what should I use it for? I started researching projects online, and recently, I’ve found Reddit to be an amazing resource—it’s full of useful ideas!\nHere are some projects I found for a Raspberry Pi 1 running DietPi:\nPi-hole → A network-wide ad blocker that filters ads and tracking requests at the DNS level.\nA child\u0026rsquo;s first computer → With a few tweaks and a friendly interface, it could be a great first PC for a kid.\nA centralized print server → To connect old non-networked printers.\nVPN server, Home Assistant, Retro gaming, or a Minecraft server → These options require more computing power (Raspberry Pi 3 or higher is recommended).\nFor now, I’ve decided to set up Pi-hole on my Raspberry Pi 1 to test how well it performs. Let’s see if it’s as good as people say!\nThat’s it for now! In my next post, I’ll walk you through the Pi-hole installation process, how I configured it, and how it works—so you can decide if it’s something worth trying. See you next time! 🚀\n","permalink":"http://localhost:1313/en/posts/dietpi-raspi1/","summary":"\u003cp\u003e\u003cimg alt=\"Raspberry pi 1 image\" loading=\"lazy\" src=\"https://images.prismic.io/rpf-products/3dc09a41-c237-4d2c-a9b8-c92eb3dc98e8_B%2B+ANGLE+1+REFRESH.jpg?auto=compress%2Cformat\u0026fit=max\"\u003e\u003c/p\u003e\n\u003cp\u003eDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across \u003ca href=\"https://dietpi.com/\"\u003eDietPi\u003c/a\u003e, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\u003c/p\u003e","title":"DietPi, the operating system to give new life to a Raspberry Pi 1"},{"content":"\nOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\nFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\nLetterboxd: This is a social network where you can rate the movies you’ve watched. I tried it—it’s well-designed, works smoothly, but… what about TV series? That’s why I decided it wasn’t the best option. For the same reason, I ruled out other apps like Moviebase, SeriesGuide, and Cinetrak.\nIMDb: This app allows you to track both movies and TV series and works well. Based on your ratings, it recommends content you might like. However, after testing it, I found it a bit difficult to generate a list of all the movies and series I watched throughout the year.\nJustWatch: The biggest advantage of this app is that, in addition to letting me rate movies and series, it also provides recommendations for content I might enjoy. A great feature is that it tells you which platform each movie or show is available on. Like any app, it’s not a perfect fit for my preferences since it’s not a social network, but it’s the closest to what I was looking for.\nFor now, JustWatch is the winner, but I’ll keep looking to see if I find another app that I like even more.\nDo you know of any other apps that meet my needs? I’d love to hear your suggestions in the comments!\n","permalink":"http://localhost:1313/en/posts/movies-series-app/","summary":"\u003cp\u003e\u003cimg alt=\"Image of a TV remote controller\" loading=\"lazy\" src=\"/images/tv-series.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\u003c/p\u003e\n\u003cp\u003eFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\u003c/p\u003e","title":"Where to store watched movies/series?"},{"content":"\nThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\nAnd here’s the list of books I’ve selected to read (at least for now):\nThink Like a Monk: Train Your Mind for Peace and Purpose Every Day. Jay Shetty. This is the book I’m currently reading and the first of the year. I’m already three-quarters of the way through, and it’s great! However, there are paragraphs I need to read twice to fully grasp all the lessons inside. It’s highly, highly recommended.\nThe Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win. Gene Kim, Kevin Behr, George Spafford. This was a Christmas gift and a book I’ve wanted to read for a long time. Apparently, it humorously illustrates the conflict between Dev and Ops and how DevOps emerges from it.\nDeep Work. Rules For Focused Success In A Distracted World. Cal Newport. I’m eager to read this book because, even though it seems obvious, staying focused while working is quite difficult nowadays.\nLa sombra del viento. Carlos Ruiz Zafón. Not everything has to be about learning, so I’ve chosen this super famous novel. Everyone who reads frequently recommends it to me. The thing is, I started it years ago but didn’t get hooked—so I’m giving it another chance!\nCatching fire. The Hunger Games 2. Suzanne Collings. I bought the trilogy and read the first two books, but then I watched all the movies, and reading the final book lost a bit of its charm since I already know how it ends. However, I don’t like leaving a series unfinished, so I’m going to read it.\nThat’s it! This is my reading commitment for the year. By the end of 2024, I’ll post an update, and it’ll also be on my GoodReads profile.\nAnd what about you? What are you planning to read this year?\n","permalink":"http://localhost:1313/en/posts/books2024/","summary":"\u003cp\u003e\u003cimg alt=\"Image of books I read in 2024\" loading=\"lazy\" src=\"/images/books2024.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\u003c/p\u003e\n\u003cp\u003eAnd here’s the list of books I’ve selected to read (at least for now):\u003c/p\u003e","title":"Books for 2024"},{"content":"Hi! I\u0026rsquo;m Javier Barbarán 👋 I\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\n🚀 Experience Software development with various technologies Creating technical and educational content Contributing to open-source projects 📩 Contact If you\u0026rsquo;d like to reach out, you can find me on LinkedIn or Twitter.\n","permalink":"http://localhost:1313/en/about/","summary":"\u003ch2 id=\"hi-im-javier-barbarán-\"\u003eHi! I\u0026rsquo;m Javier Barbarán 👋\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\u003c/p\u003e\n\u003ch3 id=\"-experience\"\u003e🚀 Experience\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSoftware development with various technologies\u003c/li\u003e\n\u003cli\u003eCreating technical and educational content\u003c/li\u003e\n\u003cli\u003eContributing to open-source projects\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"-contact\"\u003e📩 Contact\u003c/h3\u003e\n\u003cp\u003eIf you\u0026rsquo;d like to reach out, you can find me on \u003ca href=\"https://www.linkedin.com/in/javierbarbaran/\"\u003eLinkedIn\u003c/a\u003e or \u003ca href=\"https://x.com/javibarbaran\"\u003eTwitter\u003c/a\u003e.\u003c/p\u003e","title":"About Me"},{"content":"\nIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\nIn software development companies, it is common practice to impose deadlines for projects that are generally unachievable for development teams—whether due to client commitments, costs, or other reasons. As a result, teams are pressured to develop software as quickly as possible to minimize delivery delays (because, let’s face it, there will be delays). To meet these deadlines, developers often sacrifice essential development practices that ensure a minimum level of quality, such as Test-Driven Development (TDD), the use of continuous integration tools, or refactoring the code as it is written. These practices help eliminate code duplication, improve readability, and follow principles such as the Single Responsibility Principle (SRP), among many others that make up what is now known as Clean Code.\nThis is bad news—very bad news. The result is that a software product will be delivered functionally in a short time and with minimal staff, but at what cost? The developed software will be incredibly difficult to maintain, there will be no unit tests to verify system functionality (meaning that adding new features may break something else without anyone realizing), and code readability will likely be questionable at best.\nOn Javier Garzas\u0026rsquo;s blog (highly recommended), I remember reading a post stating—very accurately—that the role of software engineers is to passionately advocate to their companies that software quality is not just recommended but essential. Yes, ensuring quality means that development may initially be slower, but the long-term benefits are enormous. The post also included an analogy—a bit extreme, but it clearly illustrates the point:\nA patient about to undergo an appendectomy, already in the operating room, sees the surgeon washing their hands and instruments and says: - \u0026ldquo;Come on, doctor, don’t wash your hands, it doesn’t matter, just operate on me now! I’ll pay you, and I say there’s no time to waste.\u0026rdquo; -\nOf course, the surgeon, as part of their duty, refuses the request and insists on sterilizing everything before proceeding. Yes, this takes extra time, but skipping it would likely lead to severe post-operative complications.\nAnd that is precisely the development team\u0026rsquo;s mission when dealing with their company: to emphasize the importance of Clean Code or to accept the consequences of rushed, low-quality development.\nFor those who are still unsure—what exactly is Clean Code? A quick search on the internet will bring up Wikipedia, blogs, and plenty of articles on the topic. But I found a book titled simply Clean Code. It\u0026rsquo;s available on Amazon at this link. I checked the reviews (all excellent) and bought it without hesitation. As the title suggests, this book makes a strong statement of intent. And I have to say—it does not disappoint.\nIn my opinion, the book is incredibly thorough, covering all aspects of good programming with clear examples of what should and shouldn’t be done. Some may argue that these concepts are taught in computer science degrees, but nowadays, more and more programmers come from non-CS backgrounds. And even if you\u0026rsquo;ve learned these principles before, it’s always good to have them fresh in your mind. That’s why I firmly believe this book should be required reading for all software professionals—whether they have a formal CS background or not.\nBeyond Clean Code, the book also covers topics such as concurrency and design patterns. Some of its advice may seem trivial to experienced developers, but these reminders are incredibly important—especially in a corporate environment where new features and changes are constantly demanded yesterday. The goal? To write Clean Code and take pride in what we build.\nIs this the only book on the subject? Not at all. There are countless great books and blog posts on Clean Code, Test-Driven Development (TDD), and other methodologies. However, I personally found this book particularly clear, direct, and, above all, useful.\n","permalink":"http://localhost:1313/en/posts/cleancode/","summary":"\u003cp\u003e\u003cimg alt=\"Portada del libro Clean Code\" loading=\"lazy\" src=\"/images/cleancode.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\u003c/p\u003e","title":"Clean code"},{"content":"My Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that it took forever to turn on, animations and transitions were painfully slow, and even opening the browser with a simple webpage was a struggle… In short, all sorts of performance issues that I blamed on the new Android version, since the problems started right after the update.\nConsidering that, as of today, there doesn’t seem to be any 5.0.3 or higher update on the horizon, I thought… either I fix it, or I’m left with a fancy Nexus-branded paperweight.\nAfter searching online, I found that some Nexus 7 users (especially the 2012 version) were experiencing issues with this update. However, most of the problems were related to WiFi or Bluetooth, rather than performance. This link lists some possible fixes:\nhttp://www.gottabemobile.com/2014/12/29/android-5-0-2-problems-fixes/\nFor my specific issue, I found three possible solutions:\nAccess a hidden Google menu and follow a series of steps. Factory reset the tablet, which would erase all my data, apps, etc. Root the tablet and install Android KitKat, which had been working fine. In any case, it seemed like the solution involved deleting data and apps. Well, none of these three solutions worked for me.\nI had an app installed to extend battery life (I won’t mention the name to avoid any trouble), and I thought it might be conflicting with Android 5.0.2—since one of the new version’s selling points was improved battery life. I uninstalled it, and BOOM! The tablet was running as smoothly as it did with KitKat.\nSo, in conclusion, if you’re reading this post because you\u0026rsquo;re having issues with your Nexus 7, before trying anything complicated, check your apps! Be suspicious of the latest ones you installed, as they might not be updated to work with the new Android version. Uninstall them first. If that doesn’t fix it… well, then you can start thinking about rooting your device.\n","permalink":"http://localhost:1313/en/posts/googlenexus2012-android502/","summary":"\u003cp\u003eMy Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that \u003cstrong\u003eit took forever to turn on\u003c/strong\u003e, \u003cstrong\u003eanimations and transitions were painfully slow, and even opening the browser with a simple webpage\u003c/strong\u003e was a struggle… In short, all sorts of \u003cem\u003eperformance issues\u003c/em\u003e that I blamed on the new Android version, since the problems started right after the update.\u003c/p\u003e","title":"Google Nexus 2012 y Android 5.0.2"},{"content":"\nSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is Fog Computing? Is it just another marketing buzzword rather than a real concept?\nWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\nEssentially, the IoT consists of two main components: Cloud Computing and hardware devices deployed in the real world, connected to the cloud. Fog Computing focuses on processing data between the hardware and the cloud. For example, imagine a door with an electronic lock and an RFID reader that controls access to a room. With Fog Computing, the door itself could decide whether to grant access without needing to contact the cloud for credential verification—saving data, battery life, and reducing latency.\nNow, what would happen in a Cloud Computing setup? Would the system need to communicate with the cloud to verify access? And what if there’s no connection or the network is slow? In that case, you could end up waiting at the door for a long time or even being unable to enter, despite having the correct credentials.\nSo, is Fog Computing the same as Cloud Computing? The answer largely depends on how we define Cloud Computing. Nobody says that cloud computing can’t involve processing some data locally—after all, that’s the whole point of making devices increasingly “smart” and capable of computing certain information before sending it to the cloud.\nTherefore, in conclusion—and this is just my personal opinion—Fog Computing is a very interesting concept, and it can certainly help clarify how certain devices operate. However, if we take a broad definition of Cloud Computing, Fog Computing could be considered just a subset of it.\nResources:\nhttp://bitelia.com/2014/04/fog-computing\nhttp://www.cisco.com/web/about/ac50/ac207/crc_new/university/RFP/rfp13078.html\n","permalink":"http://localhost:1313/en/posts/fog-computing/","summary":"\u003cp\u003e\u003cimg alt=\"Paisaje con niebla\" loading=\"lazy\" src=\"/images/fog.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is \u003cem\u003eFog Computing\u003c/em\u003e? Is it just another marketing buzzword rather than a real concept?\u003c/p\u003e\n\u003cp\u003eWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\u003c/p\u003e","title":"Fog computing"},{"content":"Hace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es, sorpresa!!, OpenJDK.\nAsí que os dejo aquí los pasos que tuve que hacer para instalarlo:\n(Tened en cuenta que en el momento de escribir este post la versión de Java era la 6, asi que tenedlo en cuenta y poned el número de la versión que querais instalar)\nsudo apt-get install openjdk-6-jdk\napt-cache search jdk\nCon estas dos sencillas opciones se instala. Espero que os sirva.\n","permalink":"http://localhost:1313/en/posts/jdk-ubuntu1004/","summary":"\u003cp\u003eHace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es,  sorpresa!!, OpenJDK.\u003c/p\u003e","title":"Instalar Java JDK en Ubuntu 10.04 Lucyd Lynx"},{"content":"I\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to wikipedia.\nWhy talk about MOOCs? Because in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\nPros and cons of this type of learning:\nPros: Almost all are free. Since they’re online, each student can manage their own schedule and access the course whenever and wherever they want (as long as they have an internet connection).\nCons: You won’t receive an official certificate upon completion. At most, you may get a document stating that you completed the course, but its validity is questionable since it’s difficult to verify that the person taking the course is actually who they claim to be. (Perhaps the use of digital certificates would help, but even then, additional measures would be needed.)\nGoing back to the title of this article, the question is somewhat rhetorical, as it\u0026rsquo;s impossible to predict the evolution of these tools. However, one thing is certain: universities and in-person learning centers will never become obsolete because of MOOCs. Still, MOOCs are another great option, especially in today’s world where higher education is becoming increasingly expensive and difficult to access.\nIn fact, in the future—when MOOCs are more widespread and gain global recognition—I believe that students who follow a well-structured MOOC learning path could be just as well-prepared for the job market as those who attend in-person institutions.\nFrom a practical perspective, while most of the material covered in these courses is already available online in some form, the real appeal of MOOCs is that they curate and present information in a structured, didactic way. This allows anyone, for free, at any time, from anywhere, to simply start learning.\nIn short, MOOCs open doors for people who want to learn and expand their knowledge but cannot attend in-person courses for various reasons—whether it\u0026rsquo;s scheduling conflicts, limited class availability, or financial constraints. Ultimately, the only limit to how much you can learn is the one you set for yourself.\nAnother major advantage is that, given Spain’s current economic situation and high unemployment rates, MOOCs are a great option for those who have lost their jobs. They provide an opportunity to gain new skills and retrain—requiring only a computer and an internet connection—while maintaining flexibility for job hunting or other commitments.\nI’m writing this article in hopes that it helps anyone eager to learn. To make it more useful, here’s a list of all the MOOC platforms I know of so far:\nIn Spanish:\nMiriadaX: So far, this is the only Spanish-language MOOC platform I know of. It’s relatively new, having launched on February 1st. As I mentioned, I’ve enrolled in an Android course here. What makes this platform unique is that it’s backed by a network of Spanish and Latin American universities (Universia), which ensures a certain level of quality in the course content. Overall, it’s a solid platform. The only thing I miss is the ability to create structured learning paths that could lead to a master\u0026rsquo;s degree or even—why not?—a full university degree. But I imagine that’s something they may introduce over time.\nMy personal experience has been positive so far. Considering it’s a newly launched platform with 50,000 students enrolled, I haven’t encountered any major issues. Registration is simple, and enrolling in a course is even easier.\nEach course module is designed to be completed in three weeks. Right now, courses have fixed start and end dates. However, I believe that, since this is an online platform, it would make more sense to allow students to enroll whenever they want and have their enrollment date determine the start of the course. Otherwise, if someone discovers an Android course a month after enrollment closes, they’ll have to wait for the next session.\nAs for certification, it’s still unclear whether they’ll offer any official recognition. But let’s be honest—most people take these courses not to add them to their résumés, but simply to learn. (Though if they did provide a certificate, that would be a great bonus!)\nEn inglés:\ntheWEU The World Education University: is a MOOC platform created in the United States that hasn’t launched yet, but it looks very promising. They already have a catalog of upcoming courses, master’s programs, and even full university degrees. (Yes, you read that right—university degrees!). The range of courses is impressive, and if it delivers on its promises, it could be a fantastic option for anyone in the world with internet access. It’s expected to launch in early February, so we’ll have to see how it performs.\nCoursera\nCoursera is essentially the English-language equivalent of MiriadaX. It consists of 33 universities (mostly English-speaking, with a few French institutions as well).\nI haven’t personally used this platform yet, but it’s the oldest of the three listed here, and consequently, it has the largest student base—around 2.5 million, according to their website.\nCoursera offers a wide range of courses across multiple disciplines. They do provide a certificate upon course completion, though I’m not sure how widely recognized it is.\nConclusion As you can see, MOOCs are growing rapidly, offering valuable knowledge at the best price—free! And with the most flexible schedule—whatever works best for you.\nI’m sure there are other MOOC platforms I haven’t mentioned, but I believe the ones listed here are the most well-known.\n","permalink":"http://localhost:1313/en/posts/moocs/","summary":"\u003cp\u003eI\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to \u003ca href=\"https://es.wikipedia.org/wiki/Massive_Open_Online_Course\"\u003ewikipedia\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhy talk about MOOCs?\nBecause in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\u003c/p\u003e","title":"MOOCs, ¿El futuro de la enseñanza?"},{"content":"Due to a meeting at the European Commission for the review of a European research project I worked on (SMEPP), I had the opportunity to briefly visit Brussels, Belgium.\nI stayed at a hotel in Brussels\u0026rsquo; financial district. Its location was quite convenient, being close to Gare du Nord station and within a pleasant walking distance of the historic city center and the Grand Place.\nA Glimpse of Life in Brussels During this visit and the meeting, which was held at the European Commission offices, I got a taste of life in Brussels. Just like in most of Central Europe, lunch takes place at noon, and it’s very common for people to have a sandwich with salad or soup—often eaten in the nearest park if the sun is out.\nA Professionally Enriching Experience From a professional standpoint, attending one of the project review sessions at the European Commission offices was a remarkable experience. It gave me a sense of working on something significant at a European level. For me, even something as simple as having a temporary accreditation to access the premises was exciting in itself.\nThroughout the project, I became familiar with the entire development process, along with the periodic evaluations by the Commission, which helped me grow as an engineer.\nExploring the European Capital On a personal level, this trip allowed me to visit the European capital. Although the visit was brief, I still managed to see some of the must-visit landmarks, even within such a short timeframe.\nThe Grand Place was, of course, a must-see. This iconic location hardly needs an introduction. No matter where you look within the square, you’ll find impressive historic monuments. As expected, during my visit, the square was bustling with people—locals commuting to and from work, tourists (like myself) wandering around, and of course, cameras in hand capturing every moment.\nA Walk Through the Heart of Brussels Once in the city center, it’s easy to get lost in the streets around the Grand Place while searching for the famous Manneken Pis. Luckily, there are signs in the surrounding streets that make it easier to find.\nOn my way, I came across numerous shops selling typical Belgian delicacies—waffles and the world-renowned Belgian chocolate. From luxury brands like Godiva to smaller neighborhood stores offering samples of their delicious chocolate fountains, there was no shortage of tempting options.\nAfter a pleasant walk through the city center, tasting a few exquisite Belgian chocolates and doing some shopping, I finally found the Manneken Pis.\nThis time, the little statue was in its natural state, without any costumes. Apparently, it’s a common tradition to dress it up in various outfits for local celebrations and special events. It took me a while, but I finally managed to snap a picture without any tourists\u0026rsquo; heads in the frame!\nHidden Gems and Unexpected Discoveries During my stroll, I came across a bronze statue of Christ. At the time, I had no idea what it was, but after looking it up later, I found out it was the Everard Serclaes monument. There was a steady stream of tourists taking photos and rubbing the statue’s arm—apparently, it brings good luck.\nI continued walking until I reached some gardens, whose name I didn\u0026rsquo;t know at the time (one of the downsides of not having a travel guide). Later, I discovered that they were the Mont des Arts gardens. This spot is highly recommended—not just for its greenery but also for the breathtaking panoramic views of the city.\nEnding the Visit with a Belgian Tradition I couldn’t leave Brussels without trying a local beer, so on my way back to the hotel, I stopped at a terrace and enjoyed a Duvel beer while watching the last rays of sunlight fade away.\nA Reason to Return As you can tell, I missed out on visiting many of Brussels’ attractions. But given the limited time I had before my return, I managed to see quite a bit. That being said, it\u0026rsquo;s a perfect excuse to come back one day—to visit the Atomium and many other places I couldn’t see this time around.\nI highly recommend visiting Brussels! The city is spectacular, and its excellent location makes it an ideal base for visiting other famous European cities like Bruges, Ghent, Antwerp, and Liège—all just a short trip away.\n","permalink":"http://localhost:1313/en/posts/brussels/","summary":"\u003cp\u003eDue to a meeting at the European Commission for the review of a European research project I worked on (\u003cem\u003eSMEPP\u003c/em\u003e), I had the opportunity to briefly visit Brussels, Belgium.\u003c/p\u003e\n\u003cp\u003eI stayed at a hotel in Brussels\u0026rsquo; financial district. Its location was quite convenient, being close to \u003cem\u003eGare du Nord\u003c/em\u003e station and within a pleasant walking distance of the historic city center and the \u003cem\u003eGrand Place\u003c/em\u003e.\u003c/p\u003e\n\u003ch3 id=\"a-glimpse-of-life-in-brussels\"\u003eA Glimpse of Life in Brussels\u003c/h3\u003e\n\u003cp\u003eDuring this visit and the meeting, which was held at the European Commission offices, I got a taste of life in Brussels. Just like in most of Central Europe, lunch takes place at noon, and it’s very common for people to have a sandwich with salad or soup—often eaten in the nearest park if the sun is out.\u003c/p\u003e","title":"Brussels"},{"content":"Hello English!\n","permalink":"http://localhost:1313/en/posts/hello-world/","summary":"\u003cp\u003eHello English!\u003c/p\u003e","title":"Hello World"},{"content":"I just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\nNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\nUpdating the system Keeping the system updated is very important to get the latest security patches and an optimized system.\n1. First, update the local package index by running the following command in the terminal:\nsudo apt update\nThen, upgrade the packages to their latest versions with this command:\nsudo apt upgrade\nFinally, open the App Center to check if any applications have pending updates.\n2. Get familiar with the GNOME environment Although I have used Linux and specifically Ubuntu before, I use Windows daily. GNOME is very intuitive, but it\u0026rsquo;s a good idea to spend some time exploring its options, menus, applications, and generally getting familiar with the system.\n3. Customize the desktop In the Settings menu, you\u0026rsquo;ll find tools to personalize the system. The Appearance section is especially useful, where you can enable dark mode, change the wallpaper, and adjust the position of the taskbar.\n4. Install your preferred software The easiest way to install software is by using the App Center, where you\u0026rsquo;ll find many popular applications.\nIn my case, I have already installed some basic applications that I use frequently and will add more as needed:\nBrave, this browser looks great, and I want to try it. Ubuntu comes with Firefox by default. Visual Studio Code, a very versatile software development environment. Element, a Matrix client. 5. Security first: Enable and configure the firewall Ubuntu includes the UFW (Uncomplicated Firewall), which is very simple to configure and effective. To configure it, use these terminal commands.\nTo check the current firewall status:\nsudo ufw status\nBy default, it will be inactive, so activate it with this command:\nsudo ufw enable\nThen, set a minimal policy by denying incoming connections by default and allowing outgoing ones:\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nNext, allow exceptions for browsing the Internet (enabling HTTP and HTTPS ports) and for accessing the computer via SSH:\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw allow ssh\n6. More advanced steps Many guides mention the possibility of enabling Flatpak, an alternative to Snap, Ubuntu\u0026rsquo;s default package manager. Each has its advantages and disadvantages, so it\u0026rsquo;s advisable to do some research before making a decision. You can find more details about both package systems at this link.\nConclusion My last experience with Ubuntu was a few years ago, and now that I’ve returned to it, I can say the evolution has been impressive. It has improved in compatibility with older hardware and now offers a much more polished and efficient experience. In my case, installing Ubuntu on my MacBook Air was a great decision: the device went from being barely usable to having excellent speed, ease of use, and full compatibility.\nWith these steps, you now have a solid foundation to start exploring Ubuntu!\n","permalink":"http://localhost:1313/en/posts/ubuntu24firststeps/","summary":"\u003cp\u003eI just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\u003c/p\u003e\n\u003cp\u003eNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\u003c/p\u003e","title":"First steps with a fresh Ubuntu 24.04"},{"content":"I\u0026rsquo;ve got a 2015 MacBook Air with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\nThe installation and usage experience with Ubuntu has improved a lot since the last time I tried it about six or seven years ago. The process is super simple and effective. Thanks to Ubuntu, my laptop has regained its speed! Now I’ll walk you through the installation process step by step:\nPrerequisites The old laptop/desktop and a bit of motivation.\nAn USB drive of at least 8 GB (in my case, I used a 128 GB one, which is more than enough).\nStep-by-Step Installation of Ubuntu 1. Download Ubuntu: First, download the Ubuntu image from its official website. You can do this from the same laptop (if it’s still usable) or from another computer, as I did. Which version should you choose? I recommend the latest LTS (Long-Term Support) version, which guarantees 5 years of maintenance and security updates. I installed Ubuntu 24.04 LTS.\n2. Create a Bootable USB: The downloaded image is in .iso format, which is a disk image. To create the bootable USB on Windows, I used the program Balena Etcher, which is simple and effective. This software basically follows three steps:\nSelect the image: Click on “Flash from file” and choose the .iso file you downloaded. Select the destination drive: Make sure to choose the USB drive and not your computer’s hard drive. Start the process: Verify that everything is correct and click on “Flash”. The writing and verification may take a few minutes. Installing Ubuntu on the MacBook 1. Boot from the USB Drive: Connect the USB drive to the MacBook (which should be turned off), and turn it on while holding down the Option/Alt (⌥) key. The recognized boot disks will appear, and you must select the USB drive icon.\n2. Try Before Installing: Once Ubuntu starts, it offers you two options: “Try” or “Install Ubuntu”. I recommend choosing “Try” to check if it recognizes all the important drivers. In my case, it recognized everything! From the backlit keyboard to the trackpad, WiFi, and the special keys.\n3. Install Ubuntu: When you’re ready, click on the installation icon that appears on the Ubuntu desktop. The process is completely guided and very intuitive. You only need to choose the language, keyboard layout, and time zone. After a few minutes, Ubuntu was installed and ready to use.\nResults and Conclusions And voilà! My MacBook Air is alive again. With Ubuntu, its performance is much smoother, boot times are fast, and the user experience is excellent. Although I couldn’t compare the performance directly because I didn’t run tests before formatting macOS, I assure you that the change is incredible: the laptop flies!\nSo, if you have an old computer and think that your only option is to recycle or throw it away, consider installing Linux. You can give it a second life with Ubuntu, Mint, or any other distribution. My recommendation is Ubuntu, because as I’ve mentioned, the process was simple and the result, fantastic.\nSee you next time!\n","permalink":"http://localhost:1313/en/posts/ubuntu-macbook/","summary":"\u003cp\u003e\u003cstrong\u003eI\u0026rsquo;ve got a 2015 MacBook Air\u003c/strong\u003e with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\u003c/p\u003e","title":"Installing Ubuntu on a Macbook Air from 2015"},{"content":"\nDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across DietPi, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\nOn the DietPi website, they showcase how optimized this Linux distribution is. You can check out a comparison with other SBCs and distributions here. Note! This comparison doesn’t claim that DietPi is better than other distributions, only that it is significantly lighter.\nAnother major advantage of this distribution is its extensive software selection, making installation extremely simple for users. You can check out the complete list of available software here.\nAfter reading about all the benefits of DietPi, I had to try it on my Raspberry Pi 1 to see how well it performs.\nInstalling DietPi on a Raspberry Pi 1 The DietPi website provides a detailed installation guide, which you can check out here. However, here’s a quick summary of my experience and the steps I followed (it was really simple):\nChoose and download the image that corresponds to your miniPC (in my case, the Raspberry Pi 1).\nThe downloaded file is not an .iso but a compressed archive. You need a program like 7zip to extract it easily.\nUsing Balena Etcher, flash the extracted image to the microSD card. After flashing the image, do not remove the microSD from your computer yet. Open the file explorer (if you’re using Windows) and look for the file dietpi.txt. This file allows you to preconfigure DietPi, so it automatically applies settings on first boot.\nI opened it with Notepad++ and made a few modifications:\nAUTO_SETUP_LOCALE=es_ES.UTF-8 → Sets the regional locale.\nAUTO_SETUP_KEYBOARD_LAYOUT=es → Configures the keyboard (useful for SSH connections).\nAUTO_SETUP_TIMEZONE=Europe/Madrid → Sets the correct timezone.\nAUTO_SETUP_NET_WIFI_COUNTRY_CODE=ES → (Optional) Defines the WiFi country code.\nAUTO_SETUP_NET_USESTATIC=1 → Enables a static IP address instead of DHCP.\nAUTO_SETUP_NET_STATIC_IP=192.168.0.100 → Sets a specific local IP for the Raspberry Pi.\nAUTO_SETUP_NET_STATIC_MASK=255.255.255.0 → Configures the network mask (usually left unchanged).\nAUTO_SETUP_NET_STATIC_GATEWAY=192.168.0.1 → Defines the router’s IP address.\nAUTO_SETUP_NET_STATIC_DNS=9.9.9.9 149.112.112.112 → Uses Quad9 as the DNS provider (you can change this).\nAUTO_SETUP_NET_HOSTNAME=DietPi → Sets the Raspberry Pi’s hostname on the network.\nAUTO_SETUP_HEADLESS=1 → Disables HDMI output to save resources (since I’ll always use SSH).\nAUTO_SETUP_AUTOMATED=1 → Enables an automated installation using the predefined dietpi.txt settings.\nAfter modifying dietpi.txt, I inserted the microSD into the Raspberry Pi, connected an Ethernet cable (it was easier than setting up a USB WiFi adapter), and powered it on. I was confident that my configurations would work, so I didn’t connect a monitor or keyboard. I simply waited for it to appear on my network at the configured IP. At first, I thought something had gone wrong… but voilà! After about 2–3 minutes (yes, I’m impatient), it showed up on the network, and I connected via SSH.\nOnce connected, I could see the setup process in action. The system performed an initial apt-get update and asked a few questions:\nWould I like to participate in anonymous statistics?\nWould I like to change the root and dietpi user passwords? (A must for security!)\nShould I keep the Raspberry Pi’s serial output enabled? (Useful for debugging, but if you don’t have a serial cable, it’s better to disable it to save resources.)\nThe most interesting part is the \u0026ldquo;Browse software\u0026rdquo; option, which provides a huge list of installable software.\nAt this point, I had DietPi up and running, but… what should I use it for? I started researching projects online, and recently, I’ve found Reddit to be an amazing resource—it’s full of useful ideas!\nHere are some projects I found for a Raspberry Pi 1 running DietPi:\nPi-hole → A network-wide ad blocker that filters ads and tracking requests at the DNS level.\nA child\u0026rsquo;s first computer → With a few tweaks and a friendly interface, it could be a great first PC for a kid.\nA centralized print server → To connect old non-networked printers.\nVPN server, Home Assistant, Retro gaming, or a Minecraft server → These options require more computing power (Raspberry Pi 3 or higher is recommended).\nFor now, I’ve decided to set up Pi-hole on my Raspberry Pi 1 to test how well it performs. Let’s see if it’s as good as people say!\nThat’s it for now! In my next post, I’ll walk you through the Pi-hole installation process, how I configured it, and how it works—so you can decide if it’s something worth trying. See you next time! 🚀\n","permalink":"http://localhost:1313/en/posts/dietpi-raspi1/","summary":"\u003cp\u003e\u003cimg alt=\"Raspberry pi 1 image\" loading=\"lazy\" src=\"https://images.prismic.io/rpf-products/3dc09a41-c237-4d2c-a9b8-c92eb3dc98e8_B%2B+ANGLE+1+REFRESH.jpg?auto=compress%2Cformat\u0026fit=max\"\u003e\u003c/p\u003e\n\u003cp\u003eDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across \u003ca href=\"https://dietpi.com/\"\u003eDietPi\u003c/a\u003e, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\u003c/p\u003e","title":"DietPi, the operating system to give new life to a Raspberry Pi 1"},{"content":"\nOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\nFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\nLetterboxd: This is a social network where you can rate the movies you’ve watched. I tried it—it’s well-designed, works smoothly, but… what about TV series? That’s why I decided it wasn’t the best option. For the same reason, I ruled out other apps like Moviebase, SeriesGuide, and Cinetrak.\nIMDb: This app allows you to track both movies and TV series and works well. Based on your ratings, it recommends content you might like. However, after testing it, I found it a bit difficult to generate a list of all the movies and series I watched throughout the year.\nJustWatch: The biggest advantage of this app is that, in addition to letting me rate movies and series, it also provides recommendations for content I might enjoy. A great feature is that it tells you which platform each movie or show is available on. Like any app, it’s not a perfect fit for my preferences since it’s not a social network, but it’s the closest to what I was looking for.\nFor now, JustWatch is the winner, but I’ll keep looking to see if I find another app that I like even more.\nDo you know of any other apps that meet my needs? I’d love to hear your suggestions in the comments!\n","permalink":"http://localhost:1313/en/posts/movies-series-app/","summary":"\u003cp\u003e\u003cimg alt=\"Image of a TV remote controller\" loading=\"lazy\" src=\"/images/tv-series.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\u003c/p\u003e\n\u003cp\u003eFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\u003c/p\u003e","title":"Where to store watched movies/series?"},{"content":"\nThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\nAnd here’s the list of books I’ve selected to read (at least for now):\nThink Like a Monk: Train Your Mind for Peace and Purpose Every Day. Jay Shetty. This is the book I’m currently reading and the first of the year. I’m already three-quarters of the way through, and it’s great! However, there are paragraphs I need to read twice to fully grasp all the lessons inside. It’s highly, highly recommended.\nThe Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win. Gene Kim, Kevin Behr, George Spafford. This was a Christmas gift and a book I’ve wanted to read for a long time. Apparently, it humorously illustrates the conflict between Dev and Ops and how DevOps emerges from it.\nDeep Work. Rules For Focused Success In A Distracted World. Cal Newport. I’m eager to read this book because, even though it seems obvious, staying focused while working is quite difficult nowadays.\nLa sombra del viento. Carlos Ruiz Zafón. Not everything has to be about learning, so I’ve chosen this super famous novel. Everyone who reads frequently recommends it to me. The thing is, I started it years ago but didn’t get hooked—so I’m giving it another chance!\nCatching fire. The Hunger Games 2. Suzanne Collings. I bought the trilogy and read the first two books, but then I watched all the movies, and reading the final book lost a bit of its charm since I already know how it ends. However, I don’t like leaving a series unfinished, so I’m going to read it.\nThat’s it! This is my reading commitment for the year. By the end of 2024, I’ll post an update, and it’ll also be on my GoodReads profile.\nAnd what about you? What are you planning to read this year?\n","permalink":"http://localhost:1313/en/posts/books2024/","summary":"\u003cp\u003e\u003cimg alt=\"Image of books I read in 2024\" loading=\"lazy\" src=\"/images/books2024.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\u003c/p\u003e\n\u003cp\u003eAnd here’s the list of books I’ve selected to read (at least for now):\u003c/p\u003e","title":"Books for 2024"},{"content":"Hi! I\u0026rsquo;m Javier Barbarán 👋 I\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\n🚀 Experience Software development with various technologies Creating technical and educational content Contributing to open-source projects 📩 Contact If you\u0026rsquo;d like to reach out, you can find me on LinkedIn or Twitter.\n","permalink":"http://localhost:1313/en/about/","summary":"\u003ch2 id=\"hi-im-javier-barbarán-\"\u003eHi! I\u0026rsquo;m Javier Barbarán 👋\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\u003c/p\u003e\n\u003ch3 id=\"-experience\"\u003e🚀 Experience\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSoftware development with various technologies\u003c/li\u003e\n\u003cli\u003eCreating technical and educational content\u003c/li\u003e\n\u003cli\u003eContributing to open-source projects\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"-contact\"\u003e📩 Contact\u003c/h3\u003e\n\u003cp\u003eIf you\u0026rsquo;d like to reach out, you can find me on \u003ca href=\"https://www.linkedin.com/in/javierbarbaran/\"\u003eLinkedIn\u003c/a\u003e or \u003ca href=\"https://x.com/javibarbaran\"\u003eTwitter\u003c/a\u003e.\u003c/p\u003e","title":"About Me"},{"content":"\nIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\nIn software development companies, it is common practice to impose deadlines for projects that are generally unachievable for development teams—whether due to client commitments, costs, or other reasons. As a result, teams are pressured to develop software as quickly as possible to minimize delivery delays (because, let’s face it, there will be delays). To meet these deadlines, developers often sacrifice essential development practices that ensure a minimum level of quality, such as Test-Driven Development (TDD), the use of continuous integration tools, or refactoring the code as it is written. These practices help eliminate code duplication, improve readability, and follow principles such as the Single Responsibility Principle (SRP), among many others that make up what is now known as Clean Code.\nThis is bad news—very bad news. The result is that a software product will be delivered functionally in a short time and with minimal staff, but at what cost? The developed software will be incredibly difficult to maintain, there will be no unit tests to verify system functionality (meaning that adding new features may break something else without anyone realizing), and code readability will likely be questionable at best.\nOn Javier Garzas\u0026rsquo;s blog (highly recommended), I remember reading a post stating—very accurately—that the role of software engineers is to passionately advocate to their companies that software quality is not just recommended but essential. Yes, ensuring quality means that development may initially be slower, but the long-term benefits are enormous. The post also included an analogy—a bit extreme, but it clearly illustrates the point:\nA patient about to undergo an appendectomy, already in the operating room, sees the surgeon washing their hands and instruments and says: - \u0026ldquo;Come on, doctor, don’t wash your hands, it doesn’t matter, just operate on me now! I’ll pay you, and I say there’s no time to waste.\u0026rdquo; -\nOf course, the surgeon, as part of their duty, refuses the request and insists on sterilizing everything before proceeding. Yes, this takes extra time, but skipping it would likely lead to severe post-operative complications.\nAnd that is precisely the development team\u0026rsquo;s mission when dealing with their company: to emphasize the importance of Clean Code or to accept the consequences of rushed, low-quality development.\nFor those who are still unsure—what exactly is Clean Code? A quick search on the internet will bring up Wikipedia, blogs, and plenty of articles on the topic. But I found a book titled simply Clean Code. It\u0026rsquo;s available on Amazon at this link. I checked the reviews (all excellent) and bought it without hesitation. As the title suggests, this book makes a strong statement of intent. And I have to say—it does not disappoint.\nIn my opinion, the book is incredibly thorough, covering all aspects of good programming with clear examples of what should and shouldn’t be done. Some may argue that these concepts are taught in computer science degrees, but nowadays, more and more programmers come from non-CS backgrounds. And even if you\u0026rsquo;ve learned these principles before, it’s always good to have them fresh in your mind. That’s why I firmly believe this book should be required reading for all software professionals—whether they have a formal CS background or not.\nBeyond Clean Code, the book also covers topics such as concurrency and design patterns. Some of its advice may seem trivial to experienced developers, but these reminders are incredibly important—especially in a corporate environment where new features and changes are constantly demanded yesterday. The goal? To write Clean Code and take pride in what we build.\nIs this the only book on the subject? Not at all. There are countless great books and blog posts on Clean Code, Test-Driven Development (TDD), and other methodologies. However, I personally found this book particularly clear, direct, and, above all, useful.\n","permalink":"http://localhost:1313/en/posts/cleancode/","summary":"\u003cp\u003e\u003cimg alt=\"Portada del libro Clean Code\" loading=\"lazy\" src=\"/images/cleancode.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\u003c/p\u003e","title":"Clean code"},{"content":"My Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that it took forever to turn on, animations and transitions were painfully slow, and even opening the browser with a simple webpage was a struggle… In short, all sorts of performance issues that I blamed on the new Android version, since the problems started right after the update.\nConsidering that, as of today, there doesn’t seem to be any 5.0.3 or higher update on the horizon, I thought… either I fix it, or I’m left with a fancy Nexus-branded paperweight.\nAfter searching online, I found that some Nexus 7 users (especially the 2012 version) were experiencing issues with this update. However, most of the problems were related to WiFi or Bluetooth, rather than performance. This link lists some possible fixes:\nhttp://www.gottabemobile.com/2014/12/29/android-5-0-2-problems-fixes/\nFor my specific issue, I found three possible solutions:\nAccess a hidden Google menu and follow a series of steps. Factory reset the tablet, which would erase all my data, apps, etc. Root the tablet and install Android KitKat, which had been working fine. In any case, it seemed like the solution involved deleting data and apps. Well, none of these three solutions worked for me.\nI had an app installed to extend battery life (I won’t mention the name to avoid any trouble), and I thought it might be conflicting with Android 5.0.2—since one of the new version’s selling points was improved battery life. I uninstalled it, and BOOM! The tablet was running as smoothly as it did with KitKat.\nSo, in conclusion, if you’re reading this post because you\u0026rsquo;re having issues with your Nexus 7, before trying anything complicated, check your apps! Be suspicious of the latest ones you installed, as they might not be updated to work with the new Android version. Uninstall them first. If that doesn’t fix it… well, then you can start thinking about rooting your device.\n","permalink":"http://localhost:1313/en/posts/googlenexus2012-android502/","summary":"\u003cp\u003eMy Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that \u003cstrong\u003eit took forever to turn on\u003c/strong\u003e, \u003cstrong\u003eanimations and transitions were painfully slow, and even opening the browser with a simple webpage\u003c/strong\u003e was a struggle… In short, all sorts of \u003cem\u003eperformance issues\u003c/em\u003e that I blamed on the new Android version, since the problems started right after the update.\u003c/p\u003e","title":"Google Nexus 2012 y Android 5.0.2"},{"content":"\nSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is Fog Computing? Is it just another marketing buzzword rather than a real concept?\nWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\nEssentially, the IoT consists of two main components: Cloud Computing and hardware devices deployed in the real world, connected to the cloud. Fog Computing focuses on processing data between the hardware and the cloud. For example, imagine a door with an electronic lock and an RFID reader that controls access to a room. With Fog Computing, the door itself could decide whether to grant access without needing to contact the cloud for credential verification—saving data, battery life, and reducing latency.\nNow, what would happen in a Cloud Computing setup? Would the system need to communicate with the cloud to verify access? And what if there’s no connection or the network is slow? In that case, you could end up waiting at the door for a long time or even being unable to enter, despite having the correct credentials.\nSo, is Fog Computing the same as Cloud Computing? The answer largely depends on how we define Cloud Computing. Nobody says that cloud computing can’t involve processing some data locally—after all, that’s the whole point of making devices increasingly “smart” and capable of computing certain information before sending it to the cloud.\nTherefore, in conclusion—and this is just my personal opinion—Fog Computing is a very interesting concept, and it can certainly help clarify how certain devices operate. However, if we take a broad definition of Cloud Computing, Fog Computing could be considered just a subset of it.\nResources:\nhttp://bitelia.com/2014/04/fog-computing\nhttp://www.cisco.com/web/about/ac50/ac207/crc_new/university/RFP/rfp13078.html\n","permalink":"http://localhost:1313/en/posts/fog-computing/","summary":"\u003cp\u003e\u003cimg alt=\"Paisaje con niebla\" loading=\"lazy\" src=\"/images/fog.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is \u003cem\u003eFog Computing\u003c/em\u003e? Is it just another marketing buzzword rather than a real concept?\u003c/p\u003e\n\u003cp\u003eWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\u003c/p\u003e","title":"Fog computing"},{"content":"Hace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es, sorpresa!!, OpenJDK.\nAsí que os dejo aquí los pasos que tuve que hacer para instalarlo:\n(Tened en cuenta que en el momento de escribir este post la versión de Java era la 6, asi que tenedlo en cuenta y poned el número de la versión que querais instalar)\nsudo apt-get install openjdk-6-jdk\napt-cache search jdk\nCon estas dos sencillas opciones se instala. Espero que os sirva.\n","permalink":"http://localhost:1313/en/posts/jdk-ubuntu1004/","summary":"\u003cp\u003eHace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es,  sorpresa!!, OpenJDK.\u003c/p\u003e","title":"Instalar Java JDK en Ubuntu 10.04 Lucyd Lynx"},{"content":"I\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to wikipedia.\nWhy talk about MOOCs? Because in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\nPros and cons of this type of learning:\nPros: Almost all are free. Since they’re online, each student can manage their own schedule and access the course whenever and wherever they want (as long as they have an internet connection).\nCons: You won’t receive an official certificate upon completion. At most, you may get a document stating that you completed the course, but its validity is questionable since it’s difficult to verify that the person taking the course is actually who they claim to be. (Perhaps the use of digital certificates would help, but even then, additional measures would be needed.)\nGoing back to the title of this article, the question is somewhat rhetorical, as it\u0026rsquo;s impossible to predict the evolution of these tools. However, one thing is certain: universities and in-person learning centers will never become obsolete because of MOOCs. Still, MOOCs are another great option, especially in today’s world where higher education is becoming increasingly expensive and difficult to access.\nIn fact, in the future—when MOOCs are more widespread and gain global recognition—I believe that students who follow a well-structured MOOC learning path could be just as well-prepared for the job market as those who attend in-person institutions.\nFrom a practical perspective, while most of the material covered in these courses is already available online in some form, the real appeal of MOOCs is that they curate and present information in a structured, didactic way. This allows anyone, for free, at any time, from anywhere, to simply start learning.\nIn short, MOOCs open doors for people who want to learn and expand their knowledge but cannot attend in-person courses for various reasons—whether it\u0026rsquo;s scheduling conflicts, limited class availability, or financial constraints. Ultimately, the only limit to how much you can learn is the one you set for yourself.\nAnother major advantage is that, given Spain’s current economic situation and high unemployment rates, MOOCs are a great option for those who have lost their jobs. They provide an opportunity to gain new skills and retrain—requiring only a computer and an internet connection—while maintaining flexibility for job hunting or other commitments.\nI’m writing this article in hopes that it helps anyone eager to learn. To make it more useful, here’s a list of all the MOOC platforms I know of so far:\nIn Spanish:\nMiriadaX: So far, this is the only Spanish-language MOOC platform I know of. It’s relatively new, having launched on February 1st. As I mentioned, I’ve enrolled in an Android course here. What makes this platform unique is that it’s backed by a network of Spanish and Latin American universities (Universia), which ensures a certain level of quality in the course content. Overall, it’s a solid platform. The only thing I miss is the ability to create structured learning paths that could lead to a master\u0026rsquo;s degree or even—why not?—a full university degree. But I imagine that’s something they may introduce over time.\nMy personal experience has been positive so far. Considering it’s a newly launched platform with 50,000 students enrolled, I haven’t encountered any major issues. Registration is simple, and enrolling in a course is even easier.\nEach course module is designed to be completed in three weeks. Right now, courses have fixed start and end dates. However, I believe that, since this is an online platform, it would make more sense to allow students to enroll whenever they want and have their enrollment date determine the start of the course. Otherwise, if someone discovers an Android course a month after enrollment closes, they’ll have to wait for the next session.\nAs for certification, it’s still unclear whether they’ll offer any official recognition. But let’s be honest—most people take these courses not to add them to their résumés, but simply to learn. (Though if they did provide a certificate, that would be a great bonus!)\nEn inglés:\ntheWEU The World Education University: is a MOOC platform created in the United States that hasn’t launched yet, but it looks very promising. They already have a catalog of upcoming courses, master’s programs, and even full university degrees. (Yes, you read that right—university degrees!). The range of courses is impressive, and if it delivers on its promises, it could be a fantastic option for anyone in the world with internet access. It’s expected to launch in early February, so we’ll have to see how it performs.\nCoursera\nCoursera is essentially the English-language equivalent of MiriadaX. It consists of 33 universities (mostly English-speaking, with a few French institutions as well).\nI haven’t personally used this platform yet, but it’s the oldest of the three listed here, and consequently, it has the largest student base—around 2.5 million, according to their website.\nCoursera offers a wide range of courses across multiple disciplines. They do provide a certificate upon course completion, though I’m not sure how widely recognized it is.\nConclusion As you can see, MOOCs are growing rapidly, offering valuable knowledge at the best price—free! And with the most flexible schedule—whatever works best for you.\nI’m sure there are other MOOC platforms I haven’t mentioned, but I believe the ones listed here are the most well-known.\n","permalink":"http://localhost:1313/en/posts/moocs/","summary":"\u003cp\u003eI\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to \u003ca href=\"https://es.wikipedia.org/wiki/Massive_Open_Online_Course\"\u003ewikipedia\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhy talk about MOOCs?\nBecause in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\u003c/p\u003e","title":"MOOCs, ¿El futuro de la enseñanza?"},{"content":"Due to a meeting at the European Commission for the review of a European research project I worked on (SMEPP), I had the opportunity to briefly visit Brussels, Belgium.\nI stayed at a hotel in Brussels\u0026rsquo; financial district. Its location was quite convenient, being close to Gare du Nord station and within a pleasant walking distance of the historic city center and the Grand Place.\nA Glimpse of Life in Brussels During this visit and the meeting, which was held at the European Commission offices, I got a taste of life in Brussels. Just like in most of Central Europe, lunch takes place at noon, and it’s very common for people to have a sandwich with salad or soup—often eaten in the nearest park if the sun is out.\nA Professionally Enriching Experience From a professional standpoint, attending one of the project review sessions at the European Commission offices was a remarkable experience. It gave me a sense of working on something significant at a European level. For me, even something as simple as having a temporary accreditation to access the premises was exciting in itself.\nThroughout the project, I became familiar with the entire development process, along with the periodic evaluations by the Commission, which helped me grow as an engineer.\nExploring the European Capital On a personal level, this trip allowed me to visit the European capital. Although the visit was brief, I still managed to see some of the must-visit landmarks, even within such a short timeframe.\nThe Grand Place was, of course, a must-see. This iconic location hardly needs an introduction. No matter where you look within the square, you’ll find impressive historic monuments. As expected, during my visit, the square was bustling with people—locals commuting to and from work, tourists (like myself) wandering around, and of course, cameras in hand capturing every moment.\nA Walk Through the Heart of Brussels Once in the city center, it’s easy to get lost in the streets around the Grand Place while searching for the famous Manneken Pis. Luckily, there are signs in the surrounding streets that make it easier to find.\nOn my way, I came across numerous shops selling typical Belgian delicacies—waffles and the world-renowned Belgian chocolate. From luxury brands like Godiva to smaller neighborhood stores offering samples of their delicious chocolate fountains, there was no shortage of tempting options.\nAfter a pleasant walk through the city center, tasting a few exquisite Belgian chocolates and doing some shopping, I finally found the Manneken Pis.\nThis time, the little statue was in its natural state, without any costumes. Apparently, it’s a common tradition to dress it up in various outfits for local celebrations and special events. It took me a while, but I finally managed to snap a picture without any tourists\u0026rsquo; heads in the frame!\nHidden Gems and Unexpected Discoveries During my stroll, I came across a bronze statue of Christ. At the time, I had no idea what it was, but after looking it up later, I found out it was the Everard Serclaes monument. There was a steady stream of tourists taking photos and rubbing the statue’s arm—apparently, it brings good luck.\nI continued walking until I reached some gardens, whose name I didn\u0026rsquo;t know at the time (one of the downsides of not having a travel guide). Later, I discovered that they were the Mont des Arts gardens. This spot is highly recommended—not just for its greenery but also for the breathtaking panoramic views of the city.\nEnding the Visit with a Belgian Tradition I couldn’t leave Brussels without trying a local beer, so on my way back to the hotel, I stopped at a terrace and enjoyed a Duvel beer while watching the last rays of sunlight fade away.\nA Reason to Return As you can tell, I missed out on visiting many of Brussels’ attractions. But given the limited time I had before my return, I managed to see quite a bit. That being said, it\u0026rsquo;s a perfect excuse to come back one day—to visit the Atomium and many other places I couldn’t see this time around.\nI highly recommend visiting Brussels! The city is spectacular, and its excellent location makes it an ideal base for visiting other famous European cities like Bruges, Ghent, Antwerp, and Liège—all just a short trip away.\n","permalink":"http://localhost:1313/en/posts/brussels/","summary":"\u003cp\u003eDue to a meeting at the European Commission for the review of a European research project I worked on (\u003cem\u003eSMEPP\u003c/em\u003e), I had the opportunity to briefly visit Brussels, Belgium.\u003c/p\u003e\n\u003cp\u003eI stayed at a hotel in Brussels\u0026rsquo; financial district. Its location was quite convenient, being close to \u003cem\u003eGare du Nord\u003c/em\u003e station and within a pleasant walking distance of the historic city center and the \u003cem\u003eGrand Place\u003c/em\u003e.\u003c/p\u003e\n\u003ch3 id=\"a-glimpse-of-life-in-brussels\"\u003eA Glimpse of Life in Brussels\u003c/h3\u003e\n\u003cp\u003eDuring this visit and the meeting, which was held at the European Commission offices, I got a taste of life in Brussels. Just like in most of Central Europe, lunch takes place at noon, and it’s very common for people to have a sandwich with salad or soup—often eaten in the nearest park if the sun is out.\u003c/p\u003e","title":"Brussels"},{"content":"Hello English!\n","permalink":"http://localhost:1313/en/posts/hello-world/","summary":"\u003cp\u003eHello English!\u003c/p\u003e","title":"Hello World"},{"content":"I just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\nNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\nUpdating the system Keeping the system updated is very important to get the latest security patches and an optimized system.\n1. First, update the local package index by running the following command in the terminal:\nsudo apt update\nThen, upgrade the packages to their latest versions with this command:\nsudo apt upgrade\nFinally, open the App Center to check if any applications have pending updates.\n2. Get familiar with the GNOME environment Although I have used Linux and specifically Ubuntu before, I use Windows daily. GNOME is very intuitive, but it\u0026rsquo;s a good idea to spend some time exploring its options, menus, applications, and generally getting familiar with the system.\n3. Customize the desktop In the Settings menu, you\u0026rsquo;ll find tools to personalize the system. The Appearance section is especially useful, where you can enable dark mode, change the wallpaper, and adjust the position of the taskbar.\n4. Install your preferred software The easiest way to install software is by using the App Center, where you\u0026rsquo;ll find many popular applications.\nIn my case, I have already installed some basic applications that I use frequently and will add more as needed:\nBrave, this browser looks great, and I want to try it. Ubuntu comes with Firefox by default. Visual Studio Code, a very versatile software development environment. Element, a Matrix client. 5. Security first: Enable and configure the firewall Ubuntu includes the UFW (Uncomplicated Firewall), which is very simple to configure and effective. To configure it, use these terminal commands.\nTo check the current firewall status:\nsudo ufw status\nBy default, it will be inactive, so activate it with this command:\nsudo ufw enable\nThen, set a minimal policy by denying incoming connections by default and allowing outgoing ones:\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nNext, allow exceptions for browsing the Internet (enabling HTTP and HTTPS ports) and for accessing the computer via SSH:\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw allow ssh\n6. More advanced steps Many guides mention the possibility of enabling Flatpak, an alternative to Snap, Ubuntu\u0026rsquo;s default package manager. Each has its advantages and disadvantages, so it\u0026rsquo;s advisable to do some research before making a decision. You can find more details about both package systems at this link.\nConclusion My last experience with Ubuntu was a few years ago, and now that I’ve returned to it, I can say the evolution has been impressive. It has improved in compatibility with older hardware and now offers a much more polished and efficient experience. In my case, installing Ubuntu on my MacBook Air was a great decision: the device went from being barely usable to having excellent speed, ease of use, and full compatibility.\nWith these steps, you now have a solid foundation to start exploring Ubuntu!\n","permalink":"http://localhost:1313/en/posts/ubuntu24firststeps/","summary":"\u003cp\u003eI just installed Ubuntu 24.04 LTS on a 2015 MacBook Air to give it a second life. Surprise! All the laptop\u0026rsquo;s functionalities work perfectly: trackpad, WiFi, special function keys, and even sleep mode when closing the lid. Additionally, the system\u0026rsquo;s speed is noticeably superior compared to macOS.\u003c/p\u003e\n\u003cp\u003eNow that I have a fresh Ubuntu installation, what steps should I follow? After researching online, I\u0026rsquo;ve gathered some of the recommended first tasks:\u003c/p\u003e","title":"First steps with a fresh Ubuntu 24.04"},{"content":"I\u0026rsquo;ve got a 2015 MacBook Air with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\nThe installation and usage experience with Ubuntu has improved a lot since the last time I tried it about six or seven years ago. The process is super simple and effective. Thanks to Ubuntu, my laptop has regained its speed! Now I’ll walk you through the installation process step by step:\nPrerequisites The old laptop/desktop and a bit of motivation.\nAn USB drive of at least 8 GB (in my case, I used a 128 GB one, which is more than enough).\nStep-by-Step Installation of Ubuntu 1. Download Ubuntu: First, download the Ubuntu image from its official website. You can do this from the same laptop (if it’s still usable) or from another computer, as I did. Which version should you choose? I recommend the latest LTS (Long-Term Support) version, which guarantees 5 years of maintenance and security updates. I installed Ubuntu 24.04 LTS.\n2. Create a Bootable USB: The downloaded image is in .iso format, which is a disk image. To create the bootable USB on Windows, I used the program Balena Etcher, which is simple and effective. This software basically follows three steps:\nSelect the image: Click on “Flash from file” and choose the .iso file you downloaded. Select the destination drive: Make sure to choose the USB drive and not your computer’s hard drive. Start the process: Verify that everything is correct and click on “Flash”. The writing and verification may take a few minutes. Installing Ubuntu on the MacBook 1. Boot from the USB Drive: Connect the USB drive to the MacBook (which should be turned off), and turn it on while holding down the Option/Alt (⌥) key. The recognized boot disks will appear, and you must select the USB drive icon.\n2. Try Before Installing: Once Ubuntu starts, it offers you two options: “Try” or “Install Ubuntu”. I recommend choosing “Try” to check if it recognizes all the important drivers. In my case, it recognized everything! From the backlit keyboard to the trackpad, WiFi, and the special keys.\n3. Install Ubuntu: When you’re ready, click on the installation icon that appears on the Ubuntu desktop. The process is completely guided and very intuitive. You only need to choose the language, keyboard layout, and time zone. After a few minutes, Ubuntu was installed and ready to use.\nResults and Conclusions And voilà! My MacBook Air is alive again. With Ubuntu, its performance is much smoother, boot times are fast, and the user experience is excellent. Although I couldn’t compare the performance directly because I didn’t run tests before formatting macOS, I assure you that the change is incredible: the laptop flies!\nSo, if you have an old computer and think that your only option is to recycle or throw it away, consider installing Linux. You can give it a second life with Ubuntu, Mint, or any other distribution. My recommendation is Ubuntu, because as I’ve mentioned, the process was simple and the result, fantastic.\nSee you next time!\n","permalink":"http://localhost:1313/en/posts/ubuntu-macbook/","summary":"\u003cp\u003e\u003cstrong\u003eI\u0026rsquo;ve got a 2015 MacBook Air\u003c/strong\u003e with an Intel i5-5240U processor featuring 4 cores, 4 GB of RAM, and a 128 GB hard drive. Although I’ve always updated it to the latest versions of macOS (something that’s becoming increasingly complicated due to limited disk space), I made the mistake of installing macOS Monterey. This caused the MacBook to become terribly slow—to the point where I barely used it… it became nothing more than a paperweight.\u003c/p\u003e","title":"Installing Ubuntu on a Macbook Air from 2015"},{"content":"\nDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across DietPi, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\nOn the DietPi website, they showcase how optimized this Linux distribution is. You can check out a comparison with other SBCs and distributions here. Note! This comparison doesn’t claim that DietPi is better than other distributions, only that it is significantly lighter.\nAnother major advantage of this distribution is its extensive software selection, making installation extremely simple for users. You can check out the complete list of available software here.\nAfter reading about all the benefits of DietPi, I had to try it on my Raspberry Pi 1 to see how well it performs.\nInstalling DietPi on a Raspberry Pi 1 The DietPi website provides a detailed installation guide, which you can check out here. However, here’s a quick summary of my experience and the steps I followed (it was really simple):\nChoose and download the image that corresponds to your miniPC (in my case, the Raspberry Pi 1).\nThe downloaded file is not an .iso but a compressed archive. You need a program like 7zip to extract it easily.\nUsing Balena Etcher, flash the extracted image to the microSD card. After flashing the image, do not remove the microSD from your computer yet. Open the file explorer (if you’re using Windows) and look for the file dietpi.txt. This file allows you to preconfigure DietPi, so it automatically applies settings on first boot.\nI opened it with Notepad++ and made a few modifications:\nAUTO_SETUP_LOCALE=es_ES.UTF-8 → Sets the regional locale.\nAUTO_SETUP_KEYBOARD_LAYOUT=es → Configures the keyboard (useful for SSH connections).\nAUTO_SETUP_TIMEZONE=Europe/Madrid → Sets the correct timezone.\nAUTO_SETUP_NET_WIFI_COUNTRY_CODE=ES → (Optional) Defines the WiFi country code.\nAUTO_SETUP_NET_USESTATIC=1 → Enables a static IP address instead of DHCP.\nAUTO_SETUP_NET_STATIC_IP=192.168.0.100 → Sets a specific local IP for the Raspberry Pi.\nAUTO_SETUP_NET_STATIC_MASK=255.255.255.0 → Configures the network mask (usually left unchanged).\nAUTO_SETUP_NET_STATIC_GATEWAY=192.168.0.1 → Defines the router’s IP address.\nAUTO_SETUP_NET_STATIC_DNS=9.9.9.9 149.112.112.112 → Uses Quad9 as the DNS provider (you can change this).\nAUTO_SETUP_NET_HOSTNAME=DietPi → Sets the Raspberry Pi’s hostname on the network.\nAUTO_SETUP_HEADLESS=1 → Disables HDMI output to save resources (since I’ll always use SSH).\nAUTO_SETUP_AUTOMATED=1 → Enables an automated installation using the predefined dietpi.txt settings.\nAfter modifying dietpi.txt, I inserted the microSD into the Raspberry Pi, connected an Ethernet cable (it was easier than setting up a USB WiFi adapter), and powered it on. I was confident that my configurations would work, so I didn’t connect a monitor or keyboard. I simply waited for it to appear on my network at the configured IP. At first, I thought something had gone wrong… but voilà! After about 2–3 minutes (yes, I’m impatient), it showed up on the network, and I connected via SSH.\nOnce connected, I could see the setup process in action. The system performed an initial apt-get update and asked a few questions:\nWould I like to participate in anonymous statistics?\nWould I like to change the root and dietpi user passwords? (A must for security!)\nShould I keep the Raspberry Pi’s serial output enabled? (Useful for debugging, but if you don’t have a serial cable, it’s better to disable it to save resources.)\nThe most interesting part is the \u0026ldquo;Browse software\u0026rdquo; option, which provides a huge list of installable software.\nAt this point, I had DietPi up and running, but… what should I use it for? I started researching projects online, and recently, I’ve found Reddit to be an amazing resource—it’s full of useful ideas!\nHere are some projects I found for a Raspberry Pi 1 running DietPi:\nPi-hole → A network-wide ad blocker that filters ads and tracking requests at the DNS level.\nA child\u0026rsquo;s first computer → With a few tweaks and a friendly interface, it could be a great first PC for a kid.\nA centralized print server → To connect old non-networked printers.\nVPN server, Home Assistant, Retro gaming, or a Minecraft server → These options require more computing power (Raspberry Pi 3 or higher is recommended).\nFor now, I’ve decided to set up Pi-hole on my Raspberry Pi 1 to test how well it performs. Let’s see if it’s as good as people say!\nThat’s it for now! In my next post, I’ll walk you through the Pi-hole installation process, how I configured it, and how it works—so you can decide if it’s something worth trying. See you next time! 🚀\n","permalink":"http://localhost:1313/en/posts/dietpi-raspi1/","summary":"\u003cp\u003e\u003cimg alt=\"Raspberry pi 1 image\" loading=\"lazy\" src=\"https://images.prismic.io/rpf-products/3dc09a41-c237-4d2c-a9b8-c92eb3dc98e8_B%2B+ANGLE+1+REFRESH.jpg?auto=compress%2Cformat\u0026fit=max\"\u003e\u003c/p\u003e\n\u003cp\u003eDo you have a Raspberry Pi 1 lying around and don’t know what to do with it? While searching the internet, I came across \u003ca href=\"https://dietpi.com/\"\u003eDietPi\u003c/a\u003e, a Debian-based distribution highly optimized for memory usage, disk space, and CPU usage. It is designed for single-board computers (SBCs), such as all versions of the Raspberry Pi, among others (like Odroid, Pine64, Radxa, Allo, ASUS, NanoPi, OrangePi, ASUS Tinker), as well as miniPCs, virtual machines, and even regular PCs.\u003c/p\u003e","title":"DietPi, the operating system to give new life to a Raspberry Pi 1"},{"content":"\nOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\nFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\nLetterboxd: This is a social network where you can rate the movies you’ve watched. I tried it—it’s well-designed, works smoothly, but… what about TV series? That’s why I decided it wasn’t the best option. For the same reason, I ruled out other apps like Moviebase, SeriesGuide, and Cinetrak.\nIMDb: This app allows you to track both movies and TV series and works well. Based on your ratings, it recommends content you might like. However, after testing it, I found it a bit difficult to generate a list of all the movies and series I watched throughout the year.\nJustWatch: The biggest advantage of this app is that, in addition to letting me rate movies and series, it also provides recommendations for content I might enjoy. A great feature is that it tells you which platform each movie or show is available on. Like any app, it’s not a perfect fit for my preferences since it’s not a social network, but it’s the closest to what I was looking for.\nFor now, JustWatch is the winner, but I’ll keep looking to see if I find another app that I like even more.\nDo you know of any other apps that meet my needs? I’d love to hear your suggestions in the comments!\n","permalink":"http://localhost:1313/en/posts/movies-series-app/","summary":"\u003cp\u003e\u003cimg alt=\"Image of a TV remote controller\" loading=\"lazy\" src=\"/images/tv-series.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of my hobbies is watching TV series and movies (both in theaters and at home). At the end of the year, all sorts of recaps appear, showing the movies and shows you’ve watched, which ones you liked the most, etc.\u003c/p\u003e\n\u003cp\u003eFor me, though, if I try to remember everything I’ve watched, I end up spending a long time just thinking about it. That’s where my need arises: is there an app for mobile or computer where I can log the movies and series I’ve seen and even rate them? Of course! There must be hundreds, but finding one that actually works for me has been a challenge. Here’s a list of the apps I’ve tried (note: all are for Android, and all are free or have a free plan):\u003c/p\u003e","title":"Where to store watched movies/series?"},{"content":"\nThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\nAnd here’s the list of books I’ve selected to read (at least for now):\nThink Like a Monk: Train Your Mind for Peace and Purpose Every Day. Jay Shetty. This is the book I’m currently reading and the first of the year. I’m already three-quarters of the way through, and it’s great! However, there are paragraphs I need to read twice to fully grasp all the lessons inside. It’s highly, highly recommended.\nThe Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win. Gene Kim, Kevin Behr, George Spafford. This was a Christmas gift and a book I’ve wanted to read for a long time. Apparently, it humorously illustrates the conflict between Dev and Ops and how DevOps emerges from it.\nDeep Work. Rules For Focused Success In A Distracted World. Cal Newport. I’m eager to read this book because, even though it seems obvious, staying focused while working is quite difficult nowadays.\nLa sombra del viento. Carlos Ruiz Zafón. Not everything has to be about learning, so I’ve chosen this super famous novel. Everyone who reads frequently recommends it to me. The thing is, I started it years ago but didn’t get hooked—so I’m giving it another chance!\nCatching fire. The Hunger Games 2. Suzanne Collings. I bought the trilogy and read the first two books, but then I watched all the movies, and reading the final book lost a bit of its charm since I already know how it ends. However, I don’t like leaving a series unfinished, so I’m going to read it.\nThat’s it! This is my reading commitment for the year. By the end of 2024, I’ll post an update, and it’ll also be on my GoodReads profile.\nAnd what about you? What are you planning to read this year?\n","permalink":"http://localhost:1313/en/posts/books2024/","summary":"\u003cp\u003e\u003cimg alt=\"Image of books I read in 2024\" loading=\"lazy\" src=\"/images/books2024.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eThis year, as a New Year\u0026rsquo;s resolution, I’ve decided to read more (than in previous years). Achieving this isn’t too difficult since I don’t usually read much, so the goal I’ve set for myself is to read 5 books this year. It may seem like a small number, but for me, it will mean establishing a good habit.\u003c/p\u003e\n\u003cp\u003eAnd here’s the list of books I’ve selected to read (at least for now):\u003c/p\u003e","title":"Books for 2024"},{"content":"Hi! I\u0026rsquo;m Javier Barbarán 👋 I\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\n🚀 Experience Software development with various technologies Creating technical and educational content Contributing to open-source projects 📩 Contact If you\u0026rsquo;d like to reach out, you can find me on LinkedIn or Twitter.\n","permalink":"http://localhost:1313/en/about/","summary":"\u003ch2 id=\"hi-im-javier-barbarán-\"\u003eHi! I\u0026rsquo;m Javier Barbarán 👋\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;m a developer, writer, and technology enthusiast. In this blog, I share my ideas, projects, and learnings.\u003c/p\u003e\n\u003ch3 id=\"-experience\"\u003e🚀 Experience\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSoftware development with various technologies\u003c/li\u003e\n\u003cli\u003eCreating technical and educational content\u003c/li\u003e\n\u003cli\u003eContributing to open-source projects\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"-contact\"\u003e📩 Contact\u003c/h3\u003e\n\u003cp\u003eIf you\u0026rsquo;d like to reach out, you can find me on \u003ca href=\"https://www.linkedin.com/in/javierbarbaran/\"\u003eLinkedIn\u003c/a\u003e or \u003ca href=\"https://x.com/javibarbaran\"\u003eTwitter\u003c/a\u003e.\u003c/p\u003e","title":"About Me"},{"content":"\nIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\nIn software development companies, it is common practice to impose deadlines for projects that are generally unachievable for development teams—whether due to client commitments, costs, or other reasons. As a result, teams are pressured to develop software as quickly as possible to minimize delivery delays (because, let’s face it, there will be delays). To meet these deadlines, developers often sacrifice essential development practices that ensure a minimum level of quality, such as Test-Driven Development (TDD), the use of continuous integration tools, or refactoring the code as it is written. These practices help eliminate code duplication, improve readability, and follow principles such as the Single Responsibility Principle (SRP), among many others that make up what is now known as Clean Code.\nThis is bad news—very bad news. The result is that a software product will be delivered functionally in a short time and with minimal staff, but at what cost? The developed software will be incredibly difficult to maintain, there will be no unit tests to verify system functionality (meaning that adding new features may break something else without anyone realizing), and code readability will likely be questionable at best.\nOn Javier Garzas\u0026rsquo;s blog (highly recommended), I remember reading a post stating—very accurately—that the role of software engineers is to passionately advocate to their companies that software quality is not just recommended but essential. Yes, ensuring quality means that development may initially be slower, but the long-term benefits are enormous. The post also included an analogy—a bit extreme, but it clearly illustrates the point:\nA patient about to undergo an appendectomy, already in the operating room, sees the surgeon washing their hands and instruments and says: - \u0026ldquo;Come on, doctor, don’t wash your hands, it doesn’t matter, just operate on me now! I’ll pay you, and I say there’s no time to waste.\u0026rdquo; -\nOf course, the surgeon, as part of their duty, refuses the request and insists on sterilizing everything before proceeding. Yes, this takes extra time, but skipping it would likely lead to severe post-operative complications.\nAnd that is precisely the development team\u0026rsquo;s mission when dealing with their company: to emphasize the importance of Clean Code or to accept the consequences of rushed, low-quality development.\nFor those who are still unsure—what exactly is Clean Code? A quick search on the internet will bring up Wikipedia, blogs, and plenty of articles on the topic. But I found a book titled simply Clean Code. It\u0026rsquo;s available on Amazon at this link. I checked the reviews (all excellent) and bought it without hesitation. As the title suggests, this book makes a strong statement of intent. And I have to say—it does not disappoint.\nIn my opinion, the book is incredibly thorough, covering all aspects of good programming with clear examples of what should and shouldn’t be done. Some may argue that these concepts are taught in computer science degrees, but nowadays, more and more programmers come from non-CS backgrounds. And even if you\u0026rsquo;ve learned these principles before, it’s always good to have them fresh in your mind. That’s why I firmly believe this book should be required reading for all software professionals—whether they have a formal CS background or not.\nBeyond Clean Code, the book also covers topics such as concurrency and design patterns. Some of its advice may seem trivial to experienced developers, but these reminders are incredibly important—especially in a corporate environment where new features and changes are constantly demanded yesterday. The goal? To write Clean Code and take pride in what we build.\nIs this the only book on the subject? Not at all. There are countless great books and blog posts on Clean Code, Test-Driven Development (TDD), and other methodologies. However, I personally found this book particularly clear, direct, and, above all, useful.\n","permalink":"http://localhost:1313/en/posts/cleancode/","summary":"\u003cp\u003e\u003cimg alt=\"Portada del libro Clean Code\" loading=\"lazy\" src=\"/images/cleancode.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eIn all productive aspects of society, product quality is essential. When it comes to software, it\u0026rsquo;s exactly the same—except that software is a special kind of product. For this reason, in most cases, the client cannot or does not know how to evaluate the quality of the delivered product. They only check whether it meets the specified requirements in terms of appearance and functionality, without considering how it was built or its level of quality. However, the quality of developed software is crucial to prevent future errors and ensure that adding or modifying functionality is not a nightmare or excessively costly, among other reasons.\u003c/p\u003e","title":"Clean code"},{"content":"My Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that it took forever to turn on, animations and transitions were painfully slow, and even opening the browser with a simple webpage was a struggle… In short, all sorts of performance issues that I blamed on the new Android version, since the problems started right after the update.\nConsidering that, as of today, there doesn’t seem to be any 5.0.3 or higher update on the horizon, I thought… either I fix it, or I’m left with a fancy Nexus-branded paperweight.\nAfter searching online, I found that some Nexus 7 users (especially the 2012 version) were experiencing issues with this update. However, most of the problems were related to WiFi or Bluetooth, rather than performance. This link lists some possible fixes:\nhttp://www.gottabemobile.com/2014/12/29/android-5-0-2-problems-fixes/\nFor my specific issue, I found three possible solutions:\nAccess a hidden Google menu and follow a series of steps. Factory reset the tablet, which would erase all my data, apps, etc. Root the tablet and install Android KitKat, which had been working fine. In any case, it seemed like the solution involved deleting data and apps. Well, none of these three solutions worked for me.\nI had an app installed to extend battery life (I won’t mention the name to avoid any trouble), and I thought it might be conflicting with Android 5.0.2—since one of the new version’s selling points was improved battery life. I uninstalled it, and BOOM! The tablet was running as smoothly as it did with KitKat.\nSo, in conclusion, if you’re reading this post because you\u0026rsquo;re having issues with your Nexus 7, before trying anything complicated, check your apps! Be suspicious of the latest ones you installed, as they might not be updated to work with the new Android version. Uninstall them first. If that doesn’t fix it… well, then you can start thinking about rooting your device.\n","permalink":"http://localhost:1313/en/posts/googlenexus2012-android502/","summary":"\u003cp\u003eMy Nexus 7 is from 2012, it’s not rooted, and about two weeks ago, I received the 5.0.2 update! I was finally going to try Material Design… but nothing could be further from the truth. I quickly noticed that \u003cstrong\u003eit took forever to turn on\u003c/strong\u003e, \u003cstrong\u003eanimations and transitions were painfully slow, and even opening the browser with a simple webpage\u003c/strong\u003e was a struggle… In short, all sorts of \u003cem\u003eperformance issues\u003c/em\u003e that I blamed on the new Android version, since the problems started right after the update.\u003c/p\u003e","title":"Google Nexus 2012 y Android 5.0.2"},{"content":"\nSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is Fog Computing? Is it just another marketing buzzword rather than a real concept?\nWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\nEssentially, the IoT consists of two main components: Cloud Computing and hardware devices deployed in the real world, connected to the cloud. Fog Computing focuses on processing data between the hardware and the cloud. For example, imagine a door with an electronic lock and an RFID reader that controls access to a room. With Fog Computing, the door itself could decide whether to grant access without needing to contact the cloud for credential verification—saving data, battery life, and reducing latency.\nNow, what would happen in a Cloud Computing setup? Would the system need to communicate with the cloud to verify access? And what if there’s no connection or the network is slow? In that case, you could end up waiting at the door for a long time or even being unable to enter, despite having the correct credentials.\nSo, is Fog Computing the same as Cloud Computing? The answer largely depends on how we define Cloud Computing. Nobody says that cloud computing can’t involve processing some data locally—after all, that’s the whole point of making devices increasingly “smart” and capable of computing certain information before sending it to the cloud.\nTherefore, in conclusion—and this is just my personal opinion—Fog Computing is a very interesting concept, and it can certainly help clarify how certain devices operate. However, if we take a broad definition of Cloud Computing, Fog Computing could be considered just a subset of it.\nResources:\nhttp://bitelia.com/2014/04/fog-computing\nhttp://www.cisco.com/web/about/ac50/ac207/crc_new/university/RFP/rfp13078.html\n","permalink":"http://localhost:1313/en/posts/fog-computing/","summary":"\u003cp\u003e\u003cimg alt=\"Paisaje con niebla\" loading=\"lazy\" src=\"/images/fog.webp\"\u003e\u003c/p\u003e\n\u003cp\u003eSo yes, today, January 3, 2015, while browsing the internet, I came across the concept of Fog Computing. And what exactly is \u003cem\u003eFog Computing\u003c/em\u003e? Is it just another marketing buzzword rather than a real concept?\u003c/p\u003e\n\u003cp\u003eWell, after digging a little deeper, I found more and more information, and it turns out that Fog Computing is defined as an extension of Cloud Computing, specifically designed to meet the needs of the Internet of Things (IoT). The goal is to make these systems more scalable and responsive. How? By enabling embedded devices to make decisions on their own, without having to rely on the cloud—whenever possible and when no additional information or involvement from another device is required.\u003c/p\u003e","title":"Fog computing"},{"content":"Hace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es, sorpresa!!, OpenJDK.\nAsí que os dejo aquí los pasos que tuve que hacer para instalarlo:\n(Tened en cuenta que en el momento de escribir este post la versión de Java era la 6, asi que tenedlo en cuenta y poned el número de la versión que querais instalar)\nsudo apt-get install openjdk-6-jdk\napt-cache search jdk\nCon estas dos sencillas opciones se instala. Espero que os sirva.\n","permalink":"http://localhost:1313/en/posts/jdk-ubuntu1004/","summary":"\u003cp\u003eHace poco que he formateado mi Ubuntu y al volver a instalar todo, no he podido encontrar fácilmente la maquina virtual de Java. Intenté instalarlo con el nombre jdk, pero me decía que el paquete hacia referencia a otro y que probablemente estaba obsoleto. ¿Que hice después, irme a la página de Oracle desde donde descargué el último JDK, pero a la hora de asociarlo con mi Ubuntu, tampoco funcionaba. Total, que después de un buen rato buscando en Internet, estoy viendo que ha cambiado de nombre y no es JDK, sino que es,  sorpresa!!, OpenJDK.\u003c/p\u003e","title":"Instalar Java JDK en Ubuntu 10.04 Lucyd Lynx"},{"content":"I\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to wikipedia.\nWhy talk about MOOCs? Because in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\nPros and cons of this type of learning:\nPros: Almost all are free. Since they’re online, each student can manage their own schedule and access the course whenever and wherever they want (as long as they have an internet connection).\nCons: You won’t receive an official certificate upon completion. At most, you may get a document stating that you completed the course, but its validity is questionable since it’s difficult to verify that the person taking the course is actually who they claim to be. (Perhaps the use of digital certificates would help, but even then, additional measures would be needed.)\nGoing back to the title of this article, the question is somewhat rhetorical, as it\u0026rsquo;s impossible to predict the evolution of these tools. However, one thing is certain: universities and in-person learning centers will never become obsolete because of MOOCs. Still, MOOCs are another great option, especially in today’s world where higher education is becoming increasingly expensive and difficult to access.\nIn fact, in the future—when MOOCs are more widespread and gain global recognition—I believe that students who follow a well-structured MOOC learning path could be just as well-prepared for the job market as those who attend in-person institutions.\nFrom a practical perspective, while most of the material covered in these courses is already available online in some form, the real appeal of MOOCs is that they curate and present information in a structured, didactic way. This allows anyone, for free, at any time, from anywhere, to simply start learning.\nIn short, MOOCs open doors for people who want to learn and expand their knowledge but cannot attend in-person courses for various reasons—whether it\u0026rsquo;s scheduling conflicts, limited class availability, or financial constraints. Ultimately, the only limit to how much you can learn is the one you set for yourself.\nAnother major advantage is that, given Spain’s current economic situation and high unemployment rates, MOOCs are a great option for those who have lost their jobs. They provide an opportunity to gain new skills and retrain—requiring only a computer and an internet connection—while maintaining flexibility for job hunting or other commitments.\nI’m writing this article in hopes that it helps anyone eager to learn. To make it more useful, here’s a list of all the MOOC platforms I know of so far:\nIn Spanish:\nMiriadaX: So far, this is the only Spanish-language MOOC platform I know of. It’s relatively new, having launched on February 1st. As I mentioned, I’ve enrolled in an Android course here. What makes this platform unique is that it’s backed by a network of Spanish and Latin American universities (Universia), which ensures a certain level of quality in the course content. Overall, it’s a solid platform. The only thing I miss is the ability to create structured learning paths that could lead to a master\u0026rsquo;s degree or even—why not?—a full university degree. But I imagine that’s something they may introduce over time.\nMy personal experience has been positive so far. Considering it’s a newly launched platform with 50,000 students enrolled, I haven’t encountered any major issues. Registration is simple, and enrolling in a course is even easier.\nEach course module is designed to be completed in three weeks. Right now, courses have fixed start and end dates. However, I believe that, since this is an online platform, it would make more sense to allow students to enroll whenever they want and have their enrollment date determine the start of the course. Otherwise, if someone discovers an Android course a month after enrollment closes, they’ll have to wait for the next session.\nAs for certification, it’s still unclear whether they’ll offer any official recognition. But let’s be honest—most people take these courses not to add them to their résumés, but simply to learn. (Though if they did provide a certificate, that would be a great bonus!)\nEn inglés:\ntheWEU The World Education University: is a MOOC platform created in the United States that hasn’t launched yet, but it looks very promising. They already have a catalog of upcoming courses, master’s programs, and even full university degrees. (Yes, you read that right—university degrees!). The range of courses is impressive, and if it delivers on its promises, it could be a fantastic option for anyone in the world with internet access. It’s expected to launch in early February, so we’ll have to see how it performs.\nCoursera\nCoursera is essentially the English-language equivalent of MiriadaX. It consists of 33 universities (mostly English-speaking, with a few French institutions as well).\nI haven’t personally used this platform yet, but it’s the oldest of the three listed here, and consequently, it has the largest student base—around 2.5 million, according to their website.\nCoursera offers a wide range of courses across multiple disciplines. They do provide a certificate upon course completion, though I’m not sure how widely recognized it is.\nConclusion As you can see, MOOCs are growing rapidly, offering valuable knowledge at the best price—free! And with the most flexible schedule—whatever works best for you.\nI’m sure there are other MOOC platforms I haven’t mentioned, but I believe the ones listed here are the most well-known.\n","permalink":"http://localhost:1313/en/posts/moocs/","summary":"\u003cp\u003eI\u0026rsquo;m going to start this blog by dedicating my first post to the so-called MOOCs, or in Spanish, cursos abiertos online y masivos (massive open online courses). Many people reading this article probably already know what they are, but for those who don’t, here’s a reference to \u003ca href=\"https://es.wikipedia.org/wiki/Massive_Open_Online_Course\"\u003ewikipedia\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhy talk about MOOCs?\nBecause in recent months, I’ve noticed that more and more of these platforms are emerging (I’ll list them below). So much so that just a week ago, I found and enrolled in an Android course on the MiriadaX platform, which is essentially a Spanish-language MOOC portal.\u003c/p\u003e","title":"MOOCs, ¿El futuro de la enseñanza?"},{"content":"Due to a meeting at the European Commission for the review of a European research project I worked on (SMEPP), I had the opportunity to briefly visit Brussels, Belgium.\nI stayed at a hotel in Brussels\u0026rsquo; financial district. Its location was quite convenient, being close to Gare du Nord station and within a pleasant walking distance of the historic city center and the Grand Place.\nA Glimpse of Life in Brussels During this visit and the meeting, which was held at the European Commission offices, I got a taste of life in Brussels. Just like in most of Central Europe, lunch takes place at noon, and it’s very common for people to have a sandwich with salad or soup—often eaten in the nearest park if the sun is out.\nA Professionally Enriching Experience From a professional standpoint, attending one of the project review sessions at the European Commission offices was a remarkable experience. It gave me a sense of working on something significant at a European level. For me, even something as simple as having a temporary accreditation to access the premises was exciting in itself.\nThroughout the project, I became familiar with the entire development process, along with the periodic evaluations by the Commission, which helped me grow as an engineer.\nExploring the European Capital On a personal level, this trip allowed me to visit the European capital. Although the visit was brief, I still managed to see some of the must-visit landmarks, even within such a short timeframe.\nThe Grand Place was, of course, a must-see. This iconic location hardly needs an introduction. No matter where you look within the square, you’ll find impressive historic monuments. As expected, during my visit, the square was bustling with people—locals commuting to and from work, tourists (like myself) wandering around, and of course, cameras in hand capturing every moment.\nA Walk Through the Heart of Brussels Once in the city center, it’s easy to get lost in the streets around the Grand Place while searching for the famous Manneken Pis. Luckily, there are signs in the surrounding streets that make it easier to find.\nOn my way, I came across numerous shops selling typical Belgian delicacies—waffles and the world-renowned Belgian chocolate. From luxury brands like Godiva to smaller neighborhood stores offering samples of their delicious chocolate fountains, there was no shortage of tempting options.\nAfter a pleasant walk through the city center, tasting a few exquisite Belgian chocolates and doing some shopping, I finally found the Manneken Pis.\nThis time, the little statue was in its natural state, without any costumes. Apparently, it’s a common tradition to dress it up in various outfits for local celebrations and special events. It took me a while, but I finally managed to snap a picture without any tourists\u0026rsquo; heads in the frame!\nHidden Gems and Unexpected Discoveries During my stroll, I came across a bronze statue of Christ. At the time, I had no idea what it was, but after looking it up later, I found out it was the Everard Serclaes monument. There was a steady stream of tourists taking photos and rubbing the statue’s arm—apparently, it brings good luck.\nI continued walking until I reached some gardens, whose name I didn\u0026rsquo;t know at the time (one of the downsides of not having a travel guide). Later, I discovered that they were the Mont des Arts gardens. This spot is highly recommended—not just for its greenery but also for the breathtaking panoramic views of the city.\nEnding the Visit with a Belgian Tradition I couldn’t leave Brussels without trying a local beer, so on my way back to the hotel, I stopped at a terrace and enjoyed a Duvel beer while watching the last rays of sunlight fade away.\nA Reason to Return As you can tell, I missed out on visiting many of Brussels’ attractions. But given the limited time I had before my return, I managed to see quite a bit. That being said, it\u0026rsquo;s a perfect excuse to come back one day—to visit the Atomium and many other places I couldn’t see this time around.\nI highly recommend visiting Brussels! The city is spectacular, and its excellent location makes it an ideal base for visiting other famous European cities like Bruges, Ghent, Antwerp, and Liège—all just a short trip away.\n","permalink":"http://localhost:1313/en/posts/brussels/","summary":"\u003cp\u003eDue to a meeting at the European Commission for the review of a European research project I worked on (\u003cem\u003eSMEPP\u003c/em\u003e), I had the opportunity to briefly visit Brussels, Belgium.\u003c/p\u003e\n\u003cp\u003eI stayed at a hotel in Brussels\u0026rsquo; financial district. Its location was quite convenient, being close to \u003cem\u003eGare du Nord\u003c/em\u003e station and within a pleasant walking distance of the historic city center and the \u003cem\u003eGrand Place\u003c/em\u003e.\u003c/p\u003e\n\u003ch3 id=\"a-glimpse-of-life-in-brussels\"\u003eA Glimpse of Life in Brussels\u003c/h3\u003e\n\u003cp\u003eDuring this visit and the meeting, which was held at the European Commission offices, I got a taste of life in Brussels. Just like in most of Central Europe, lunch takes place at noon, and it’s very common for people to have a sandwich with salad or soup—often eaten in the nearest park if the sun is out.\u003c/p\u003e","title":"Brussels"}]